{"ast":null,"code":"var toGeoJSON = function () {\n  'use strict';\n\n  var removeSpace = /\\s*/g,\n    trimSpace = /^\\s*|\\s*$/g,\n    splitSpace = /\\s+/;\n  // generate a short, numeric hash of a string\n  function okhash(x) {\n    if (!x || !x.length) return 0;\n    for (var i = 0, h = 0; i < x.length; i++) {\n      h = (h << 5) - h + x.charCodeAt(i) | 0;\n    }\n    return h;\n  }\n  // all Y children of X\n  function get(x, y) {\n    return x.getElementsByTagName(y);\n  }\n  function attr(x, y) {\n    return x.getAttribute(y);\n  }\n  function attrf(x, y) {\n    return parseFloat(attr(x, y));\n  }\n  // one Y child of X, if any, otherwise null\n  function get1(x, y) {\n    var n = get(x, y);\n    return n.length ? n[0] : null;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n  function norm(el) {\n    if (el.normalize) {\n      el.normalize();\n    }\n    return el;\n  }\n  // cast array x into numbers\n  function numarray(x) {\n    for (var j = 0, o = []; j < x.length; j++) {\n      o[j] = parseFloat(x[j]);\n    }\n    return o;\n  }\n  // get the content of a text node, if any\n  function nodeVal(x) {\n    if (x) {\n      norm(x);\n    }\n    return x && x.textContent || '';\n  }\n  // get the contents of multiple text nodes, if present\n  function getMulti(x, ys) {\n    var o = {},\n      n,\n      k;\n    for (k = 0; k < ys.length; k++) {\n      n = get1(x, ys[k]);\n      if (n) o[ys[k]] = nodeVal(n);\n    }\n    return o;\n  }\n  // add properties of Y to X, overwriting if present in both\n  function extend(x, y) {\n    for (var k in y) x[k] = y[k];\n  }\n  // get one coordinate from a coordinate array, if any\n  function coord1(v) {\n    return numarray(v.replace(removeSpace, '').split(','));\n  }\n  // get all coordinates from a coordinate array as [[],[]]\n  function coord(v) {\n    var coords = v.replace(trimSpace, '').split(splitSpace),\n      o = [];\n    for (var i = 0; i < coords.length; i++) {\n      o.push(coord1(coords[i]));\n    }\n    return o;\n  }\n  function coordPair(x) {\n    var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n      ele = get1(x, 'ele'),\n      // handle namespaced attribute in browser\n      heartRate = get1(x, 'gpxtpx:hr') || get1(x, 'hr'),\n      time = get1(x, 'time'),\n      e;\n    if (ele) {\n      e = parseFloat(nodeVal(ele));\n      if (!isNaN(e)) {\n        ll.push(e);\n      }\n    }\n    return {\n      coordinates: ll,\n      time: time ? nodeVal(time) : null,\n      heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null\n    };\n  }\n\n  // create a new feature collection parent object\n  function fc() {\n    return {\n      type: 'FeatureCollection',\n      features: []\n    };\n  }\n  var serializer;\n  if (typeof XMLSerializer !== 'undefined') {\n    /* istanbul ignore next */\n    serializer = new XMLSerializer();\n    // only require xmldom in a node environment\n  } else if (typeof exports === 'object' && typeof process === 'object' && !process.browser) {\n    serializer = new (require('xmldom').XMLSerializer)();\n  }\n  function xml2str(str) {\n    // IE9 will create a new XMLSerializer but it'll crash immediately.\n    // This line is ignored because we don't run coverage tests in IE9\n    /* istanbul ignore next */\n    if (str.xml !== undefined) return str.xml;\n    return serializer.serializeToString(str);\n  }\n  var t = {\n    kml: function (doc) {\n      var gj = fc(),\n        // styleindex keeps track of hashed styles in order to match features\n        styleIndex = {},\n        styleByHash = {},\n        // stylemapindex keeps track of style maps to expose in properties\n        styleMapIndex = {},\n        // atomic geospatial types supported by KML - MultiGeometry is\n        // handled separately\n        geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n        // all root placemarks in the file\n        placemarks = get(doc, 'Placemark'),\n        styles = get(doc, 'Style'),\n        styleMaps = get(doc, 'StyleMap');\n      for (var k = 0; k < styles.length; k++) {\n        var hash = okhash(xml2str(styles[k])).toString(16);\n        styleIndex['#' + attr(styles[k], 'id')] = hash;\n        styleByHash[hash] = styles[k];\n      }\n      for (var l = 0; l < styleMaps.length; l++) {\n        styleIndex['#' + attr(styleMaps[l], 'id')] = okhash(xml2str(styleMaps[l])).toString(16);\n        var pairs = get(styleMaps[l], 'Pair');\n        var pairsMap = {};\n        for (var m = 0; m < pairs.length; m++) {\n          pairsMap[nodeVal(get1(pairs[m], 'key'))] = nodeVal(get1(pairs[m], 'styleUrl'));\n        }\n        styleMapIndex['#' + attr(styleMaps[l], 'id')] = pairsMap;\n      }\n      for (var j = 0; j < placemarks.length; j++) {\n        gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n      }\n      function kmlColor(v) {\n        var color, opacity;\n        v = v || '';\n        if (v.substr(0, 1) === '#') {\n          v = v.substr(1);\n        }\n        if (v.length === 6 || v.length === 3) {\n          color = v;\n        }\n        if (v.length === 8) {\n          opacity = parseInt(v.substr(0, 2), 16) / 255;\n          color = '#' + v.substr(6, 2) + v.substr(4, 2) + v.substr(2, 2);\n        }\n        return [color, isNaN(opacity) ? undefined : opacity];\n      }\n      function gxCoord(v) {\n        return numarray(v.split(' '));\n      }\n      function gxCoords(root) {\n        var elems = get(root, 'coord', 'gx'),\n          coords = [],\n          times = [];\n        if (elems.length === 0) elems = get(root, 'gx:coord');\n        for (var i = 0; i < elems.length; i++) coords.push(gxCoord(nodeVal(elems[i])));\n        var timeElems = get(root, 'when');\n        for (var j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n        return {\n          coords: coords,\n          times: times\n        };\n      }\n      function getGeometry(root) {\n        var geomNode,\n          geomNodes,\n          i,\n          j,\n          k,\n          geoms = [],\n          coordTimes = [];\n        if (get1(root, 'MultiGeometry')) {\n          return getGeometry(get1(root, 'MultiGeometry'));\n        }\n        if (get1(root, 'MultiTrack')) {\n          return getGeometry(get1(root, 'MultiTrack'));\n        }\n        if (get1(root, 'gx:MultiTrack')) {\n          return getGeometry(get1(root, 'gx:MultiTrack'));\n        }\n        for (i = 0; i < geotypes.length; i++) {\n          geomNodes = get(root, geotypes[i]);\n          if (geomNodes) {\n            for (j = 0; j < geomNodes.length; j++) {\n              geomNode = geomNodes[j];\n              if (geotypes[i] === 'Point') {\n                geoms.push({\n                  type: 'Point',\n                  coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                });\n              } else if (geotypes[i] === 'LineString') {\n                geoms.push({\n                  type: 'LineString',\n                  coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                });\n              } else if (geotypes[i] === 'Polygon') {\n                var rings = get(geomNode, 'LinearRing'),\n                  coords = [];\n                for (k = 0; k < rings.length; k++) {\n                  coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                }\n                geoms.push({\n                  type: 'Polygon',\n                  coordinates: coords\n                });\n              } else if (geotypes[i] === 'Track' || geotypes[i] === 'gx:Track') {\n                var track = gxCoords(geomNode);\n                geoms.push({\n                  type: 'LineString',\n                  coordinates: track.coords\n                });\n                if (track.times.length) coordTimes.push(track.times);\n              }\n            }\n          }\n        }\n        return {\n          geoms: geoms,\n          coordTimes: coordTimes\n        };\n      }\n      function getPlacemark(root) {\n        var geomsAndTimes = getGeometry(root),\n          i,\n          properties = {},\n          name = nodeVal(get1(root, 'name')),\n          styleUrl = nodeVal(get1(root, 'styleUrl')),\n          description = nodeVal(get1(root, 'description')),\n          timeSpan = get1(root, 'TimeSpan'),\n          timeStamp = get1(root, 'TimeStamp'),\n          extendedData = get1(root, 'ExtendedData'),\n          lineStyle = get1(root, 'LineStyle'),\n          polyStyle = get1(root, 'PolyStyle'),\n          visibility = get1(root, 'visibility');\n        if (!geomsAndTimes.geoms.length) return [];\n        if (name) properties.name = name;\n        if (styleUrl) {\n          if (styleUrl[0] !== '#') {\n            styleUrl = '#' + styleUrl;\n          }\n          properties.styleUrl = styleUrl;\n          if (styleIndex[styleUrl]) {\n            properties.styleHash = styleIndex[styleUrl];\n          }\n          if (styleMapIndex[styleUrl]) {\n            properties.styleMapHash = styleMapIndex[styleUrl];\n            properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n          }\n          // Try to populate the lineStyle or polyStyle since we got the style hash\n          var style = styleByHash[properties.styleHash];\n          if (style) {\n            if (!lineStyle) lineStyle = get1(style, 'LineStyle');\n            if (!polyStyle) polyStyle = get1(style, 'PolyStyle');\n          }\n        }\n        if (description) properties.description = description;\n        if (timeSpan) {\n          var begin = nodeVal(get1(timeSpan, 'begin'));\n          var end = nodeVal(get1(timeSpan, 'end'));\n          properties.timespan = {\n            begin: begin,\n            end: end\n          };\n        }\n        if (timeStamp) {\n          properties.timestamp = nodeVal(get1(timeStamp, 'when'));\n        }\n        if (lineStyle) {\n          var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n            color = linestyles[0],\n            opacity = linestyles[1],\n            width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n          if (color) properties.stroke = color;\n          if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n          if (!isNaN(width)) properties['stroke-width'] = width;\n        }\n        if (polyStyle) {\n          var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n            pcolor = polystyles[0],\n            popacity = polystyles[1],\n            fill = nodeVal(get1(polyStyle, 'fill')),\n            outline = nodeVal(get1(polyStyle, 'outline'));\n          if (pcolor) properties.fill = pcolor;\n          if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n          if (fill) properties['fill-opacity'] = fill === '1' ? properties['fill-opacity'] || 1 : 0;\n          if (outline) properties['stroke-opacity'] = outline === '1' ? properties['stroke-opacity'] || 1 : 0;\n        }\n        if (extendedData) {\n          var datas = get(extendedData, 'Data'),\n            simpleDatas = get(extendedData, 'SimpleData');\n          for (i = 0; i < datas.length; i++) {\n            properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n          }\n          for (i = 0; i < simpleDatas.length; i++) {\n            properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n          }\n        }\n        if (visibility) {\n          properties.visibility = nodeVal(visibility);\n        }\n        if (geomsAndTimes.coordTimes.length) {\n          properties.coordTimes = geomsAndTimes.coordTimes.length === 1 ? geomsAndTimes.coordTimes[0] : geomsAndTimes.coordTimes;\n        }\n        var feature = {\n          type: 'Feature',\n          geometry: geomsAndTimes.geoms.length === 1 ? geomsAndTimes.geoms[0] : {\n            type: 'GeometryCollection',\n            geometries: geomsAndTimes.geoms\n          },\n          properties: properties\n        };\n        if (attr(root, 'id')) feature.id = attr(root, 'id');\n        return [feature];\n      }\n      return gj;\n    },\n    gpx: function (doc) {\n      var i,\n        tracks = get(doc, 'trk'),\n        routes = get(doc, 'rte'),\n        waypoints = get(doc, 'wpt'),\n        // a feature collection\n        gj = fc(),\n        feature;\n      for (i = 0; i < tracks.length; i++) {\n        feature = getTrack(tracks[i]);\n        if (feature) gj.features.push(feature);\n      }\n      for (i = 0; i < routes.length; i++) {\n        feature = getRoute(routes[i]);\n        if (feature) gj.features.push(feature);\n      }\n      for (i = 0; i < waypoints.length; i++) {\n        gj.features.push(getPoint(waypoints[i]));\n      }\n      function getPoints(node, pointname) {\n        var pts = get(node, pointname),\n          line = [],\n          times = [],\n          heartRates = [],\n          l = pts.length;\n        if (l < 2) return {}; // Invalid line in GeoJSON\n        for (var i = 0; i < l; i++) {\n          var c = coordPair(pts[i]);\n          line.push(c.coordinates);\n          if (c.time) times.push(c.time);\n          if (c.heartRate) heartRates.push(c.heartRate);\n        }\n        return {\n          line: line,\n          times: times,\n          heartRates: heartRates\n        };\n      }\n      function getTrack(node) {\n        var segments = get(node, 'trkseg'),\n          track = [],\n          times = [],\n          heartRates = [],\n          line;\n        for (var i = 0; i < segments.length; i++) {\n          line = getPoints(segments[i], 'trkpt');\n          if (line) {\n            if (line.line) track.push(line.line);\n            if (line.times && line.times.length) times.push(line.times);\n            if (line.heartRates && line.heartRates.length) heartRates.push(line.heartRates);\n          }\n        }\n        if (track.length === 0) return;\n        var properties = getProperties(node);\n        if (times.length) properties.coordTimes = track.length === 1 ? times[0] : times;\n        if (heartRates.length) properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n        return {\n          type: 'Feature',\n          properties: properties,\n          geometry: {\n            type: track.length === 1 ? 'LineString' : 'MultiLineString',\n            coordinates: track.length === 1 ? track[0] : track\n          }\n        };\n      }\n      function getRoute(node) {\n        var line = getPoints(node, 'rtept');\n        if (!line.line) return;\n        var routeObj = {\n          type: 'Feature',\n          properties: getProperties(node),\n          geometry: {\n            type: 'LineString',\n            coordinates: line.line\n          }\n        };\n        return routeObj;\n      }\n      function getPoint(node) {\n        var prop = getProperties(node);\n        extend(prop, getMulti(node, ['sym', 'type']));\n        return {\n          type: 'Feature',\n          properties: prop,\n          geometry: {\n            type: 'Point',\n            coordinates: coordPair(node).coordinates\n          }\n        };\n      }\n      function getProperties(node) {\n        var prop, links;\n        prop = getMulti(node, ['name', 'cmt', 'desc', 'time', 'keywords']);\n        links = get(node, 'link');\n        if (links.length) prop.links = [];\n        for (var i = 0, link; i < links.length; i++) {\n          link = {\n            href: attr(links[i], 'href')\n          };\n          extend(link, getMulti(links[i], ['text', 'type']));\n          prop.links.push(link);\n        }\n        return prop;\n      }\n      return gj;\n    }\n  };\n  return t;\n}();\nif (typeof module !== 'undefined') module.exports = toGeoJSON;","map":{"version":3,"names":["toGeoJSON","removeSpace","trimSpace","splitSpace","okhash","x","length","i","h","charCodeAt","get","y","getElementsByTagName","attr","getAttribute","attrf","parseFloat","get1","n","norm","el","normalize","numarray","j","o","nodeVal","textContent","getMulti","ys","k","extend","coord1","v","replace","split","coord","coords","push","coordPair","ll","ele","heartRate","time","e","isNaN","coordinates","fc","type","features","serializer","XMLSerializer","exports","process","browser","require","xml2str","str","xml","undefined","serializeToString","t","kml","doc","gj","styleIndex","styleByHash","styleMapIndex","geotypes","placemarks","styles","styleMaps","hash","toString","l","pairs","pairsMap","m","concat","getPlacemark","kmlColor","color","opacity","substr","parseInt","gxCoord","gxCoords","root","elems","times","timeElems","getGeometry","geomNode","geomNodes","geoms","coordTimes","rings","track","geomsAndTimes","properties","name","styleUrl","description","timeSpan","timeStamp","extendedData","lineStyle","polyStyle","visibility","styleHash","styleMapHash","normal","style","begin","end","timespan","timestamp","linestyles","width","stroke","polystyles","pcolor","popacity","fill","outline","datas","simpleDatas","feature","geometry","geometries","id","gpx","tracks","routes","waypoints","getTrack","getRoute","getPoint","getPoints","node","pointname","pts","line","heartRates","c","segments","getProperties","routeObj","prop","links","link","href","module"],"sources":["/Users/zhenchaoxia/Desktop/WORK/Stony Brook/Fall 2023/CSE416/Group/MapGroupProject/node_modules/togeojson/togeojson.js"],"sourcesContent":["var toGeoJSON = (function() {\n    'use strict';\n\n    var removeSpace = /\\s*/g,\n        trimSpace = /^\\s*|\\s*$/g,\n        splitSpace = /\\s+/;\n    // generate a short, numeric hash of a string\n    function okhash(x) {\n        if (!x || !x.length) return 0;\n        for (var i = 0, h = 0; i < x.length; i++) {\n            h = ((h << 5) - h) + x.charCodeAt(i) | 0;\n        } return h;\n    }\n    // all Y children of X\n    function get(x, y) { return x.getElementsByTagName(y); }\n    function attr(x, y) { return x.getAttribute(y); }\n    function attrf(x, y) { return parseFloat(attr(x, y)); }\n    // one Y child of X, if any, otherwise null\n    function get1(x, y) { var n = get(x, y); return n.length ? n[0] : null; }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n    function norm(el) { if (el.normalize) { el.normalize(); } return el; }\n    // cast array x into numbers\n    function numarray(x) {\n        for (var j = 0, o = []; j < x.length; j++) { o[j] = parseFloat(x[j]); }\n        return o;\n    }\n    // get the content of a text node, if any\n    function nodeVal(x) {\n        if (x) { norm(x); }\n        return (x && x.textContent) || '';\n    }\n    // get the contents of multiple text nodes, if present\n    function getMulti(x, ys) {\n        var o = {}, n, k;\n        for (k = 0; k < ys.length; k++) {\n            n = get1(x, ys[k]);\n            if (n) o[ys[k]] = nodeVal(n);\n        }\n        return o;\n    }\n    // add properties of Y to X, overwriting if present in both\n    function extend(x, y) { for (var k in y) x[k] = y[k]; }\n    // get one coordinate from a coordinate array, if any\n    function coord1(v) { return numarray(v.replace(removeSpace, '').split(',')); }\n    // get all coordinates from a coordinate array as [[],[]]\n    function coord(v) {\n        var coords = v.replace(trimSpace, '').split(splitSpace),\n            o = [];\n        for (var i = 0; i < coords.length; i++) {\n            o.push(coord1(coords[i]));\n        }\n        return o;\n    }\n    function coordPair(x) {\n        var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n            ele = get1(x, 'ele'),\n            // handle namespaced attribute in browser\n            heartRate = get1(x, 'gpxtpx:hr') || get1(x, 'hr'),\n            time = get1(x, 'time'),\n            e;\n        if (ele) {\n            e = parseFloat(nodeVal(ele));\n            if (!isNaN(e)) {\n                ll.push(e);\n            }\n        }\n        return {\n            coordinates: ll,\n            time: time ? nodeVal(time) : null,\n            heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null\n        };\n    }\n\n    // create a new feature collection parent object\n    function fc() {\n        return {\n            type: 'FeatureCollection',\n            features: []\n        };\n    }\n\n    var serializer;\n    if (typeof XMLSerializer !== 'undefined') {\n        /* istanbul ignore next */\n        serializer = new XMLSerializer();\n    // only require xmldom in a node environment\n    } else if (typeof exports === 'object' && typeof process === 'object' && !process.browser) {\n        serializer = new (require('xmldom').XMLSerializer)();\n    }\n    function xml2str(str) {\n        // IE9 will create a new XMLSerializer but it'll crash immediately.\n        // This line is ignored because we don't run coverage tests in IE9\n        /* istanbul ignore next */\n        if (str.xml !== undefined) return str.xml;\n        return serializer.serializeToString(str);\n    }\n\n    var t = {\n        kml: function(doc) {\n\n            var gj = fc(),\n                // styleindex keeps track of hashed styles in order to match features\n                styleIndex = {}, styleByHash = {},\n                // stylemapindex keeps track of style maps to expose in properties\n                styleMapIndex = {},\n                // atomic geospatial types supported by KML - MultiGeometry is\n                // handled separately\n                geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n                // all root placemarks in the file\n                placemarks = get(doc, 'Placemark'),\n                styles = get(doc, 'Style'),\n                styleMaps = get(doc, 'StyleMap');\n\n            for (var k = 0; k < styles.length; k++) {\n                var hash = okhash(xml2str(styles[k])).toString(16);\n                styleIndex['#' + attr(styles[k], 'id')] = hash;\n                styleByHash[hash] = styles[k];\n            }\n            for (var l = 0; l < styleMaps.length; l++) {\n                styleIndex['#' + attr(styleMaps[l], 'id')] = okhash(xml2str(styleMaps[l])).toString(16);\n                var pairs = get(styleMaps[l], 'Pair');\n                var pairsMap = {};\n                for (var m = 0; m < pairs.length; m++) {\n                    pairsMap[nodeVal(get1(pairs[m], 'key'))] = nodeVal(get1(pairs[m], 'styleUrl'));\n                }\n                styleMapIndex['#' + attr(styleMaps[l], 'id')] = pairsMap;\n\n            }\n            for (var j = 0; j < placemarks.length; j++) {\n                gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n            }\n            function kmlColor(v) {\n                var color, opacity;\n                v = v || '';\n                if (v.substr(0, 1) === '#') { v = v.substr(1); }\n                if (v.length === 6 || v.length === 3) { color = v; }\n                if (v.length === 8) {\n                    opacity = parseInt(v.substr(0, 2), 16) / 255;\n                    color = '#' + v.substr(6, 2) +\n                        v.substr(4, 2) +\n                        v.substr(2, 2);\n                }\n                return [color, isNaN(opacity) ? undefined : opacity];\n            }\n            function gxCoord(v) { return numarray(v.split(' ')); }\n            function gxCoords(root) {\n                var elems = get(root, 'coord', 'gx'), coords = [], times = [];\n                if (elems.length === 0) elems = get(root, 'gx:coord');\n                for (var i = 0; i < elems.length; i++) coords.push(gxCoord(nodeVal(elems[i])));\n                var timeElems = get(root, 'when');\n                for (var j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n                return {\n                    coords: coords,\n                    times: times\n                };\n            }\n            function getGeometry(root) {\n                var geomNode, geomNodes, i, j, k, geoms = [], coordTimes = [];\n                if (get1(root, 'MultiGeometry')) { return getGeometry(get1(root, 'MultiGeometry')); }\n                if (get1(root, 'MultiTrack')) { return getGeometry(get1(root, 'MultiTrack')); }\n                if (get1(root, 'gx:MultiTrack')) { return getGeometry(get1(root, 'gx:MultiTrack')); }\n                for (i = 0; i < geotypes.length; i++) {\n                    geomNodes = get(root, geotypes[i]);\n                    if (geomNodes) {\n                        for (j = 0; j < geomNodes.length; j++) {\n                            geomNode = geomNodes[j];\n                            if (geotypes[i] === 'Point') {\n                                geoms.push({\n                                    type: 'Point',\n                                    coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'LineString') {\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'Polygon') {\n                                var rings = get(geomNode, 'LinearRing'),\n                                    coords = [];\n                                for (k = 0; k < rings.length; k++) {\n                                    coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                                }\n                                geoms.push({\n                                    type: 'Polygon',\n                                    coordinates: coords\n                                });\n                            } else if (geotypes[i] === 'Track' ||\n                                geotypes[i] === 'gx:Track') {\n                                var track = gxCoords(geomNode);\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: track.coords\n                                });\n                                if (track.times.length) coordTimes.push(track.times);\n                            }\n                        }\n                    }\n                }\n                return {\n                    geoms: geoms,\n                    coordTimes: coordTimes\n                };\n            }\n            function getPlacemark(root) {\n                var geomsAndTimes = getGeometry(root), i, properties = {},\n                    name = nodeVal(get1(root, 'name')),\n                    styleUrl = nodeVal(get1(root, 'styleUrl')),\n                    description = nodeVal(get1(root, 'description')),\n                    timeSpan = get1(root, 'TimeSpan'),\n                    timeStamp = get1(root, 'TimeStamp'),\n                    extendedData = get1(root, 'ExtendedData'),\n                    lineStyle = get1(root, 'LineStyle'),\n                    polyStyle = get1(root, 'PolyStyle'),\n                    visibility = get1(root, 'visibility');\n\n                if (!geomsAndTimes.geoms.length) return [];\n                if (name) properties.name = name;\n                if (styleUrl) {\n                    if (styleUrl[0] !== '#') {\n                        styleUrl = '#' + styleUrl;\n                    }\n\n                    properties.styleUrl = styleUrl;\n                    if (styleIndex[styleUrl]) {\n                        properties.styleHash = styleIndex[styleUrl];\n                    }\n                    if (styleMapIndex[styleUrl]) {\n                        properties.styleMapHash = styleMapIndex[styleUrl];\n                        properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n                    }\n                    // Try to populate the lineStyle or polyStyle since we got the style hash\n                    var style = styleByHash[properties.styleHash];\n                    if (style) {\n                        if (!lineStyle) lineStyle = get1(style, 'LineStyle');\n                        if (!polyStyle) polyStyle = get1(style, 'PolyStyle');\n                    }\n                }\n                if (description) properties.description = description;\n                if (timeSpan) {\n                    var begin = nodeVal(get1(timeSpan, 'begin'));\n                    var end = nodeVal(get1(timeSpan, 'end'));\n                    properties.timespan = { begin: begin, end: end };\n                }\n                if (timeStamp) {\n                    properties.timestamp = nodeVal(get1(timeStamp, 'when'));\n                }\n                if (lineStyle) {\n                    var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n                        color = linestyles[0],\n                        opacity = linestyles[1],\n                        width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                    if (color) properties.stroke = color;\n                    if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n                    if (!isNaN(width)) properties['stroke-width'] = width;\n                }\n                if (polyStyle) {\n                    var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n                        pcolor = polystyles[0],\n                        popacity = polystyles[1],\n                        fill = nodeVal(get1(polyStyle, 'fill')),\n                        outline = nodeVal(get1(polyStyle, 'outline'));\n                    if (pcolor) properties.fill = pcolor;\n                    if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n                    if (fill) properties['fill-opacity'] = fill === '1' ? properties['fill-opacity'] || 1 : 0;\n                    if (outline) properties['stroke-opacity'] = outline === '1' ? properties['stroke-opacity'] || 1 : 0;\n                }\n                if (extendedData) {\n                    var datas = get(extendedData, 'Data'),\n                        simpleDatas = get(extendedData, 'SimpleData');\n\n                    for (i = 0; i < datas.length; i++) {\n                        properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n                    }\n                    for (i = 0; i < simpleDatas.length; i++) {\n                        properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n                    }\n                }\n                if (visibility) {\n                    properties.visibility = nodeVal(visibility);\n                }\n                if (geomsAndTimes.coordTimes.length) {\n                    properties.coordTimes = (geomsAndTimes.coordTimes.length === 1) ?\n                        geomsAndTimes.coordTimes[0] : geomsAndTimes.coordTimes;\n                }\n                var feature = {\n                    type: 'Feature',\n                    geometry: (geomsAndTimes.geoms.length === 1) ? geomsAndTimes.geoms[0] : {\n                        type: 'GeometryCollection',\n                        geometries: geomsAndTimes.geoms\n                    },\n                    properties: properties\n                };\n                if (attr(root, 'id')) feature.id = attr(root, 'id');\n                return [feature];\n            }\n            return gj;\n        },\n        gpx: function(doc) {\n            var i,\n                tracks = get(doc, 'trk'),\n                routes = get(doc, 'rte'),\n                waypoints = get(doc, 'wpt'),\n                // a feature collection\n                gj = fc(),\n                feature;\n            for (i = 0; i < tracks.length; i++) {\n                feature = getTrack(tracks[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < routes.length; i++) {\n                feature = getRoute(routes[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < waypoints.length; i++) {\n                gj.features.push(getPoint(waypoints[i]));\n            }\n            function getPoints(node, pointname) {\n                var pts = get(node, pointname),\n                    line = [],\n                    times = [],\n                    heartRates = [],\n                    l = pts.length;\n                if (l < 2) return {};  // Invalid line in GeoJSON\n                for (var i = 0; i < l; i++) {\n                    var c = coordPair(pts[i]);\n                    line.push(c.coordinates);\n                    if (c.time) times.push(c.time);\n                    if (c.heartRate) heartRates.push(c.heartRate);\n                }\n                return {\n                    line: line,\n                    times: times,\n                    heartRates: heartRates\n                };\n            }\n            function getTrack(node) {\n                var segments = get(node, 'trkseg'),\n                    track = [],\n                    times = [],\n                    heartRates = [],\n                    line;\n                for (var i = 0; i < segments.length; i++) {\n                    line = getPoints(segments[i], 'trkpt');\n                    if (line) {\n                        if (line.line) track.push(line.line);\n                        if (line.times && line.times.length) times.push(line.times);\n                        if (line.heartRates && line.heartRates.length) heartRates.push(line.heartRates);\n                    }\n                }\n                if (track.length === 0) return;\n                var properties = getProperties(node);\n                if (times.length) properties.coordTimes = track.length === 1 ? times[0] : times;\n                if (heartRates.length) properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n                return {\n                    type: 'Feature',\n                    properties: properties,\n                    geometry: {\n                        type: track.length === 1 ? 'LineString' : 'MultiLineString',\n                        coordinates: track.length === 1 ? track[0] : track\n                    }\n                };\n            }\n            function getRoute(node) {\n                var line = getPoints(node, 'rtept');\n                if (!line.line) return;\n                var routeObj = {\n                    type: 'Feature',\n                    properties: getProperties(node),\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: line.line\n                    }\n                };\n                return routeObj;\n            }\n            function getPoint(node) {\n                var prop = getProperties(node);\n                extend(prop, getMulti(node, ['sym', 'type']));\n                return {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'Point',\n                        coordinates: coordPair(node).coordinates\n                    }\n                };\n            }\n            function getProperties(node) {\n                var prop, links;\n                prop = getMulti(node, ['name', 'cmt', 'desc', 'time', 'keywords']);\n                links = get(node, 'link');\n                if (links.length) prop.links = [];\n                for (var i = 0, link; i < links.length; i++) {\n                    link = { href: attr(links[i], 'href') };\n                    extend(link, getMulti(links[i], ['text', 'type']));\n                    prop.links.push(link);\n                }\n                return prop;\n            }\n            return gj;\n        }\n    };\n    return t;\n})();\n\nif (typeof module !== 'undefined') module.exports = toGeoJSON;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}