{"ast":null,"code":"module.exports.point = justType('Point', 'POINT');\nmodule.exports.line = justType('LineString', 'POLYLINE');\nmodule.exports.polygon = justType('Polygon', 'POLYGON');\nfunction justType(type, TYPE) {\n  return function (gj) {\n    var oftype = gj.features.filter(isType(type));\n    return {\n      geometries: TYPE === 'POLYGON' || TYPE === 'POLYLINE' ? [oftype.map(justCoords)] : oftype.map(justCoords),\n      properties: oftype.map(justProps),\n      type: TYPE\n    };\n  };\n}\nfunction justCoords(t) {\n  if (t.geometry.coordinates[0] !== undefined && t.geometry.coordinates[0][0] !== undefined && t.geometry.coordinates[0][0][0] !== undefined) {\n    return t.geometry.coordinates[0];\n  } else {\n    return t.geometry.coordinates;\n  }\n}\nfunction justProps(t) {\n  return t.properties;\n}\nfunction isType(t) {\n  return function (f) {\n    return f.geometry.type === t;\n  };\n}","map":{"version":3,"names":["module","exports","point","justType","line","polygon","type","TYPE","gj","oftype","features","filter","isType","geometries","map","justCoords","properties","justProps","t","geometry","coordinates","undefined","f"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shp-write/src/geojson.js"],"sourcesContent":["module.exports.point = justType('Point', 'POINT');\nmodule.exports.line = justType('LineString', 'POLYLINE');\nmodule.exports.polygon = justType('Polygon', 'POLYGON');\n\nfunction justType(type, TYPE) {\n    return function(gj) {\n        var oftype = gj.features.filter(isType(type));\n        return {\n            geometries: (TYPE === 'POLYGON' || TYPE === 'POLYLINE') ? [oftype.map(justCoords)] : oftype.map(justCoords),\n            properties: oftype.map(justProps),\n            type: TYPE\n        };\n    };\n}\n\nfunction justCoords(t) {\n    if (t.geometry.coordinates[0] !== undefined &&\n        t.geometry.coordinates[0][0] !== undefined &&\n        t.geometry.coordinates[0][0][0] !== undefined) {\n        return t.geometry.coordinates[0];\n    } else {\n        return t.geometry.coordinates;\n    }\n}\n\nfunction justProps(t) {\n    return t.properties;\n}\n\nfunction isType(t) {\n    return function(f) { return f.geometry.type === t; };\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,CAACC,KAAK,GAAGC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;AACjDH,MAAM,CAACC,OAAO,CAACG,IAAI,GAAGD,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC;AACxDH,MAAM,CAACC,OAAO,CAACI,OAAO,GAAGF,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC;AAEvD,SAASA,QAAQA,CAACG,IAAI,EAAEC,IAAI,EAAE;EAC1B,OAAO,UAASC,EAAE,EAAE;IAChB,IAAIC,MAAM,GAAGD,EAAE,CAACE,QAAQ,CAACC,MAAM,CAACC,MAAM,CAACN,IAAI,CAAC,CAAC;IAC7C,OAAO;MACHO,UAAU,EAAGN,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,UAAU,GAAI,CAACE,MAAM,CAACK,GAAG,CAACC,UAAU,CAAC,CAAC,GAAGN,MAAM,CAACK,GAAG,CAACC,UAAU,CAAC;MAC3GC,UAAU,EAAEP,MAAM,CAACK,GAAG,CAACG,SAAS,CAAC;MACjCX,IAAI,EAAEC;IACV,CAAC;EACL,CAAC;AACL;AAEA,SAASQ,UAAUA,CAACG,CAAC,EAAE;EACnB,IAAIA,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,KAAKC,SAAS,IACvCH,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKC,SAAS,IAC1CH,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKC,SAAS,EAAE;IAC/C,OAAOH,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;EACpC,CAAC,MAAM;IACH,OAAOF,CAAC,CAACC,QAAQ,CAACC,WAAW;EACjC;AACJ;AAEA,SAASH,SAASA,CAACC,CAAC,EAAE;EAClB,OAAOA,CAAC,CAACF,UAAU;AACvB;AAEA,SAASJ,MAAMA,CAACM,CAAC,EAAE;EACf,OAAO,UAASI,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACH,QAAQ,CAACb,IAAI,KAAKY,CAAC;EAAE,CAAC;AACxD"},"metadata":{},"sourceType":"script"}