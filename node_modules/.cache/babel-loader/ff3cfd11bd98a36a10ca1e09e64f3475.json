{"ast":null,"code":"'use strict';\n\nconst Promise = require('lie');\nconst combine = require('./combine');\nconst Buffer = require('buffer').Buffer;\nmodule.exports = binaryAjax;\nfunction binaryAjax(_url, type) {\n  return new Promise(function (resolve, reject) {\n    const url = combine(_url, type);\n    const ajax = new XMLHttpRequest();\n    ajax.open('GET', url, true);\n    if (type !== 'prj' && type !== 'cpg') {\n      ajax.responseType = 'arraybuffer';\n    }\n    ajax.addEventListener('load', function () {\n      if (ajax.status > 399) {\n        if (type === 'prj' || type === 'cpg') {\n          return resolve(false);\n        } else {\n          return reject(new Error(ajax.status));\n        }\n      }\n      if (type !== 'prj' && type !== 'cpg') {\n        return resolve(Buffer.from(ajax.response));\n      } else {\n        return resolve(ajax.response);\n      }\n    }, false);\n    ajax.send();\n  });\n}","map":{"version":3,"names":["Promise","require","combine","Buffer","module","exports","binaryAjax","_url","type","resolve","reject","url","ajax","XMLHttpRequest","open","responseType","addEventListener","status","Error","from","response","send"],"sources":["C:/Users/haosh/desktop/CSE416 projec/MapGroupProject/node_modules/shpjs/lib/binaryajax-browser.js"],"sourcesContent":["'use strict';\nconst Promise = require('lie');\nconst combine = require('./combine');\nconst Buffer = require('buffer').Buffer;\nmodule.exports = binaryAjax;\nfunction binaryAjax (_url, type) {\n  return new Promise(function (resolve, reject) {\n    const url = combine(_url, type);\n    const ajax = new XMLHttpRequest();\n    ajax.open('GET', url, true);\n    if (type !== 'prj' && type !== 'cpg') {\n      ajax.responseType = 'arraybuffer';\n    }\n    ajax.addEventListener('load', function () {\n      if (ajax.status > 399) {\n        if (type === 'prj' || type === 'cpg') {\n          return resolve(false);\n        } else {\n          return reject(new Error(ajax.status));\n        }\n      }\n      if (type !== 'prj' && type !== 'cpg') {\n        return resolve(Buffer.from(ajax.response));\n      } else {\n        return resolve(ajax.response);\n      }\n    }, false);\n    ajax.send();\n  });\n}\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM;AACvCC,MAAM,CAACC,OAAO,GAAGC,UAAU;AAC3B,SAASA,UAAUA,CAAEC,IAAI,EAAEC,IAAI,EAAE;EAC/B,OAAO,IAAIR,OAAO,CAAC,UAAUS,OAAO,EAAEC,MAAM,EAAE;IAC5C,MAAMC,GAAG,GAAGT,OAAO,CAACK,IAAI,EAAEC,IAAI,CAAC;IAC/B,MAAMI,IAAI,GAAG,IAAIC,cAAc,CAAC,CAAC;IACjCD,IAAI,CAACE,IAAI,CAAC,KAAK,EAAEH,GAAG,EAAE,IAAI,CAAC;IAC3B,IAAIH,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,KAAK,EAAE;MACpCI,IAAI,CAACG,YAAY,GAAG,aAAa;IACnC;IACAH,IAAI,CAACI,gBAAgB,CAAC,MAAM,EAAE,YAAY;MACxC,IAAIJ,IAAI,CAACK,MAAM,GAAG,GAAG,EAAE;QACrB,IAAIT,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,KAAK,EAAE;UACpC,OAAOC,OAAO,CAAC,KAAK,CAAC;QACvB,CAAC,MAAM;UACL,OAAOC,MAAM,CAAC,IAAIQ,KAAK,CAACN,IAAI,CAACK,MAAM,CAAC,CAAC;QACvC;MACF;MACA,IAAIT,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,KAAK,EAAE;QACpC,OAAOC,OAAO,CAACN,MAAM,CAACgB,IAAI,CAACP,IAAI,CAACQ,QAAQ,CAAC,CAAC;MAC5C,CAAC,MAAM;QACL,OAAOX,OAAO,CAACG,IAAI,CAACQ,QAAQ,CAAC;MAC/B;IACF,CAAC,EAAE,KAAK,CAAC;IACTR,IAAI,CAACS,IAAI,CAAC,CAAC;EACb,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}