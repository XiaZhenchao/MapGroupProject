{"ast":null,"code":"var RE_SPACEDASH = /[- ]/g;\n// Module exports\nvar iconv = module.exports = {\n  toEncoding: function (str, encoding) {\n    return iconv.getCodec(encoding).toEncoding(str);\n  },\n  fromEncoding: function (buf, encoding) {\n    return iconv.getCodec(encoding).fromEncoding(buf);\n  },\n  encodingExists: function (enc) {\n    loadEncodings();\n    enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n    return iconv.encodings[enc] !== undefined;\n  },\n  defaultCharUnicode: '�',\n  defaultCharSingleByte: '?',\n  encodingsLoaded: false,\n  // Get correct codec for given encoding.\n  getCodec: function (encoding) {\n    loadEncodings();\n    var enc = encoding || \"utf8\";\n    var codecOptions = undefined;\n    while (1) {\n      if (getType(enc) === \"String\") enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n      var codec = iconv.encodings[enc];\n      var type = getType(codec);\n      if (type === \"String\") {\n        // Link to other encoding.\n        codecOptions = {\n          originalEncoding: enc\n        };\n        enc = codec;\n      } else if (type === \"Object\" && codec.type != undefined) {\n        // Options for other encoding.\n        codecOptions = codec;\n        enc = codec.type;\n      } else if (type === \"Function\")\n        // Codec itself.\n        return codec(codecOptions);else throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\");\n    }\n  },\n  // Define basic encodings\n  encodings: {\n    internal: function (options) {\n      return {\n        toEncoding: toInternalEncoding,\n        fromEncoding: fromInternalEncoding,\n        options: options\n      };\n    },\n    utf8: \"internal\",\n    ucs2: \"internal\",\n    binary: \"internal\",\n    ascii: \"internal\",\n    base64: \"internal\",\n    // Codepage single-byte encodings.\n    singlebyte: function (options) {\n      // Prepare chars if needed\n      if (!options.charsBuf) {\n        if (!options.chars || options.chars.length !== 128 && options.chars.length !== 256) throw new Error(\"Encoding '\" + options.type + \"' has incorrect 'chars' (must be of len 128 or 256)\");\n        if (options.chars.length === 128) options.chars = asciiString + options.chars;\n        options.charsBuf = new Buffer(options.chars, 'ucs2');\n      }\n      if (!options.revCharsBuf) {\n        options.revCharsBuf = new Buffer(65536);\n        var defChar = iconv.defaultCharSingleByte.charCodeAt(0);\n        for (var i = 0; i < options.revCharsBuf.length; i++) options.revCharsBuf[i] = defChar;\n        for (var i = 0; i < options.chars.length; i++) options.revCharsBuf[options.chars.charCodeAt(i)] = i;\n      }\n      return {\n        toEncoding: toSingleByteEncoding,\n        fromEncoding: fromSingleByteEncoding,\n        options: options\n      };\n    },\n    // Codepage double-byte encodings.\n    table: function (options) {\n      if (!options.table) {\n        throw new Error(\"Encoding '\" + options.type + \"' has incorect 'table' option\");\n      }\n      if (!options.revCharsTable) {\n        var revCharsTable = options.revCharsTable = {};\n        for (var i = 0; i <= 0xFFFF; i++) {\n          revCharsTable[i] = 0;\n        }\n        var table = options.table;\n        for (var key in table) {\n          revCharsTable[table[key]] = +key;\n        }\n      }\n      return {\n        toEncoding: toTableEncoding,\n        fromEncoding: fromTableEncoding,\n        options: options\n      };\n    }\n  }\n};\nfunction toInternalEncoding(str) {\n  return new Buffer(ensureString(str), this.options.originalEncoding);\n}\nfunction fromInternalEncoding(buf) {\n  return ensureBuffer(buf).toString(this.options.originalEncoding);\n}\nfunction toTableEncoding(str) {\n  str = ensureString(str);\n  var strLen = str.length;\n  var revCharsTable = this.options.revCharsTable;\n  var newBuf = new Buffer(strLen * 2),\n    gbkcode,\n    unicode,\n    defaultChar = revCharsTable[iconv.defaultCharUnicode.charCodeAt(0)];\n  for (var i = 0, j = 0; i < strLen; i++) {\n    unicode = str.charCodeAt(i);\n    if (unicode >> 7) {\n      gbkcode = revCharsTable[unicode] || defaultChar;\n      newBuf[j++] = gbkcode >> 8; //high byte;\n      newBuf[j++] = gbkcode & 0xFF; //low byte\n    } else {\n      //ascii\n      newBuf[j++] = unicode;\n    }\n  }\n  return newBuf.slice(0, j);\n}\nfunction fromTableEncoding(buf) {\n  buf = ensureBuffer(buf);\n  var bufLen = buf.length;\n  var table = this.options.table;\n  var newBuf = new Buffer(bufLen * 2),\n    unicode,\n    gbkcode,\n    defaultChar = iconv.defaultCharUnicode.charCodeAt(0);\n  for (var i = 0, j = 0; i < bufLen; i++, j += 2) {\n    gbkcode = buf[i];\n    if (gbkcode & 0x80) {\n      gbkcode = (gbkcode << 8) + buf[++i];\n      unicode = table[gbkcode] || defaultChar;\n    } else {\n      unicode = gbkcode;\n    }\n    newBuf[j] = unicode & 0xFF; //low byte\n    newBuf[j + 1] = unicode >> 8; //high byte\n  }\n\n  return newBuf.slice(0, j).toString('ucs2');\n}\nfunction toSingleByteEncoding(str) {\n  str = ensureString(str);\n  var buf = new Buffer(str.length);\n  var revCharsBuf = this.options.revCharsBuf;\n  for (var i = 0; i < str.length; i++) buf[i] = revCharsBuf[str.charCodeAt(i)];\n  return buf;\n}\nfunction fromSingleByteEncoding(buf) {\n  buf = ensureBuffer(buf);\n\n  // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n  var charsBuf = this.options.charsBuf;\n  var newBuf = new Buffer(buf.length * 2);\n  var idx1 = 0,\n    idx2 = 0;\n  for (var i = 0, _len = buf.length; i < _len; i++) {\n    idx1 = buf[i] * 2;\n    idx2 = i * 2;\n    newBuf[idx2] = charsBuf[idx1];\n    newBuf[idx2 + 1] = charsBuf[idx1 + 1];\n  }\n  return newBuf.toString('ucs2');\n}\n\n// Add aliases to convert functions\niconv.encode = iconv.toEncoding;\niconv.decode = iconv.fromEncoding;\n\n// Load other encodings manually from files in /encodings dir.\nfunction loadEncodings() {\n  if (!iconv.encodingsLoaded) {\n    [require('./encodings/singlebyte'), require('./encodings/gbk'), require('./encodings/big5')].forEach(function (encodings) {\n      for (var key in encodings) iconv.encodings[key] = encodings[key];\n    });\n    iconv.encodingsLoaded = true;\n  }\n}\n\n// Utilities\nvar asciiString = '\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f' + ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7f';\nvar ensureBuffer = function (buf) {\n  buf = buf || new Buffer(0);\n  return buf instanceof Buffer ? buf : new Buffer(\"\" + buf, \"binary\");\n};\nvar ensureString = function (str) {\n  str = str || \"\";\n  return str instanceof Buffer ? str.toString('utf8') : \"\" + str;\n};\nvar getType = function (obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1);\n};","map":{"version":3,"names":["RE_SPACEDASH","iconv","module","exports","toEncoding","str","encoding","getCodec","fromEncoding","buf","encodingExists","enc","loadEncodings","replace","toLowerCase","encodings","undefined","defaultCharUnicode","defaultCharSingleByte","encodingsLoaded","codecOptions","getType","codec","type","originalEncoding","Error","internal","options","toInternalEncoding","fromInternalEncoding","utf8","ucs2","binary","ascii","base64","singlebyte","charsBuf","chars","length","asciiString","Buffer","revCharsBuf","defChar","charCodeAt","i","toSingleByteEncoding","fromSingleByteEncoding","table","revCharsTable","key","toTableEncoding","fromTableEncoding","ensureString","ensureBuffer","toString","strLen","newBuf","gbkcode","unicode","defaultChar","j","slice","bufLen","idx1","idx2","_len","encode","decode","require","forEach","obj","Object","prototype","call"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shapefile/node_modules/iconv-lite/index.js"],"sourcesContent":["var RE_SPACEDASH = /[- ]/g;\n// Module exports\nvar iconv = module.exports = {\n    toEncoding: function(str, encoding) {\n        return iconv.getCodec(encoding).toEncoding(str);\n    },\n    fromEncoding: function(buf, encoding) {\n        return iconv.getCodec(encoding).fromEncoding(buf);\n    },\n    encodingExists: function(enc) {\n        loadEncodings();\n        enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n        return (iconv.encodings[enc] !== undefined);\n    },\n    \n    defaultCharUnicode: '�',\n    defaultCharSingleByte: '?',\n\n    encodingsLoaded: false,\n    \n    // Get correct codec for given encoding.\n    getCodec: function(encoding) {\n        loadEncodings();\n        var enc = encoding || \"utf8\";\n        var codecOptions = undefined;\n        while (1) {\n            if (getType(enc) === \"String\")\n                enc = enc.replace(RE_SPACEDASH, \"\").toLowerCase();\n            var codec = iconv.encodings[enc];\n            var type = getType(codec);\n            if (type === \"String\") {\n                // Link to other encoding.\n                codecOptions = {originalEncoding: enc};\n                enc = codec;\n            }\n            else if (type === \"Object\" && codec.type != undefined) {\n                // Options for other encoding.\n                codecOptions = codec;\n                enc = codec.type;\n            } \n            else if (type === \"Function\")\n                // Codec itself.\n                return codec(codecOptions);\n            else\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    },\n    \n    // Define basic encodings\n    encodings: {\n        internal: function(options) {\n            return {\n                toEncoding: toInternalEncoding,\n                fromEncoding: fromInternalEncoding,\n                options: options\n            };\n        },\n        utf8: \"internal\",\n        ucs2: \"internal\",\n        binary: \"internal\",\n        ascii: \"internal\",\n        base64: \"internal\",\n        \n        // Codepage single-byte encodings.\n        singlebyte: function(options) {\n            // Prepare chars if needed\n            if (!options.charsBuf) {\n                if (!options.chars || (options.chars.length !== 128 && options.chars.length !== 256))\n                    throw new Error(\"Encoding '\"+options.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n                \n                if (options.chars.length === 128)\n                    options.chars = asciiString + options.chars;\n\n                options.charsBuf = new Buffer(options.chars, 'ucs2');\n            }\n            \n            if (!options.revCharsBuf) {\n                options.revCharsBuf = new Buffer(65536);\n                var defChar = iconv.defaultCharSingleByte.charCodeAt(0);\n                for (var i = 0; i < options.revCharsBuf.length; i++)\n                    options.revCharsBuf[i] = defChar;\n                for (var i = 0; i < options.chars.length; i++)\n                    options.revCharsBuf[options.chars.charCodeAt(i)] = i;\n            }\n\n            return {\n                toEncoding: toSingleByteEncoding,\n                fromEncoding: fromSingleByteEncoding,\n                options: options,\n            };\n        },\n\n        // Codepage double-byte encodings.\n        table: function(options) {\n            if (!options.table) {\n                throw new Error(\"Encoding '\" + options.type + \"' has incorect 'table' option\");\n            }\n            if (!options.revCharsTable) {\n                var revCharsTable = options.revCharsTable = {};\n                for (var i = 0; i <= 0xFFFF; i++) {\n                    revCharsTable[i] = 0;\n                }\n\n                var table = options.table;\n                for (var key in table) {\n                    revCharsTable[table[key]] = +key;\n                }\n            }\n            \n            return {\n                toEncoding: toTableEncoding,\n                fromEncoding: fromTableEncoding,\n                options: options,\n            };\n        }\n    }\n};\n\nfunction toInternalEncoding(str) {\n    return new Buffer(ensureString(str), this.options.originalEncoding);\n}\n\nfunction fromInternalEncoding(buf) {\n    return ensureBuffer(buf).toString(this.options.originalEncoding);\n}\n\nfunction toTableEncoding(str) {\n    str = ensureString(str);\n    var strLen = str.length;\n    var revCharsTable = this.options.revCharsTable;\n    var newBuf = new Buffer(strLen*2), gbkcode, unicode,\n        defaultChar = revCharsTable[iconv.defaultCharUnicode.charCodeAt(0)];\n\n    for (var i = 0, j = 0; i < strLen; i++) {\n        unicode = str.charCodeAt(i);\n        if (unicode >> 7) {\n            gbkcode = revCharsTable[unicode] || defaultChar;\n            newBuf[j++] = gbkcode >> 8; //high byte;\n            newBuf[j++] = gbkcode & 0xFF; //low byte\n        } else {//ascii\n            newBuf[j++] = unicode;\n        }\n    }\n    return newBuf.slice(0, j);\n}\n\nfunction fromTableEncoding(buf) {\n    buf = ensureBuffer(buf);\n    var bufLen = buf.length;\n    var table = this.options.table;\n    var newBuf = new Buffer(bufLen*2), unicode, gbkcode,\n        defaultChar = iconv.defaultCharUnicode.charCodeAt(0);\n\n    for (var i = 0, j = 0; i < bufLen; i++, j+=2) {\n        gbkcode = buf[i];\n        if (gbkcode & 0x80) {\n            gbkcode = (gbkcode << 8) + buf[++i];\n            unicode = table[gbkcode] || defaultChar;\n        } else {\n            unicode = gbkcode;\n        }\n        newBuf[j] = unicode & 0xFF; //low byte\n        newBuf[j+1] = unicode >> 8; //high byte\n    }\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nfunction toSingleByteEncoding(str) {\n    str = ensureString(str);\n    \n    var buf = new Buffer(str.length);\n    var revCharsBuf = this.options.revCharsBuf;\n    for (var i = 0; i < str.length; i++)\n        buf[i] = revCharsBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nfunction fromSingleByteEncoding(buf) {\n    buf = ensureBuffer(buf);\n    \n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var charsBuf = this.options.charsBuf;\n    var newBuf = new Buffer(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0, _len = buf.length; i < _len; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = charsBuf[idx1];\n        newBuf[idx2+1] = charsBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\n// Add aliases to convert functions\niconv.encode = iconv.toEncoding;\niconv.decode = iconv.fromEncoding;\n\n// Load other encodings manually from files in /encodings dir.\nfunction loadEncodings() {\n    if (!iconv.encodingsLoaded) {\n        [ require('./encodings/singlebyte'),\n          require('./encodings/gbk'),\n          require('./encodings/big5')\n        ].forEach(function(encodings) {\n            for (var key in encodings)\n                iconv.encodings[key] = encodings[key]\n        });\n        iconv.encodingsLoaded = true;\n    }\n}\n\n\n\n// Utilities\nvar asciiString = '\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f'+\n              ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7f';\n\nvar ensureBuffer = function(buf) {\n    buf = buf || new Buffer(0);\n    return (buf instanceof Buffer) ? buf : new Buffer(\"\"+buf, \"binary\");\n}\n\nvar ensureString = function(str) {\n    str = str || \"\";\n    return (str instanceof Buffer) ? str.toString('utf8') : (\"\"+str);\n}\n\nvar getType = function(obj) {\n    return Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}