{"ast":null,"code":"var queue = require(\"d3-queue\");\nvar file = require(\"./file\");\nmodule.exports = function (reader) {\n  return function () {\n    var argv = [].slice.call(arguments),\n      callback = argv.pop(),\n      r = reader.apply(null, argv);\n    queue(1).defer(r.readHeader).defer(function (callback) {\n      var records = [];\n      (function readNextRecord() {\n        r.readRecord(function (error, record) {\n          if (error) return callback(error);\n          if (record === file.end) return callback(null, records);\n          records.push(record);\n          process.nextTick(readNextRecord);\n        });\n      })();\n    }).defer(r.close).await(function (error, header, records) {\n      if (error) return callback(error);\n      callback(null, header, records);\n    });\n  };\n};","map":{"version":3,"names":["queue","require","file","module","exports","reader","argv","slice","call","arguments","callback","pop","r","apply","defer","readHeader","records","readNextRecord","readRecord","error","record","end","push","process","nextTick","close","await","header"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shapefile/read.js"],"sourcesContent":["var queue = require(\"d3-queue\");\n\nvar file = require(\"./file\");\n\nmodule.exports = function(reader) {\n  return function() {\n    var argv = [].slice.call(arguments),\n        callback = argv.pop(),\n        r = reader.apply(null, argv);\n\n    queue(1)\n        .defer(r.readHeader)\n        .defer(function(callback) {\n          var records = [];\n          (function readNextRecord() {\n            r.readRecord(function(error, record) {\n              if (error) return callback(error);\n              if (record === file.end) return callback(null, records);\n              records.push(record);\n              process.nextTick(readNextRecord);\n            });\n          })();\n        })\n        .defer(r.close)\n        .await(function(error, header, records) {\n          if (error) return callback(error);\n          callback(null, header, records);\n        });\n  };\n};\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE/B,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE5BE,MAAM,CAACC,OAAO,GAAG,UAASC,MAAM,EAAE;EAChC,OAAO,YAAW;IAChB,IAAIC,IAAI,GAAG,EAAE,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;MAC/BC,QAAQ,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAAC;MACrBC,CAAC,GAAGP,MAAM,CAACQ,KAAK,CAAC,IAAI,EAAEP,IAAI,CAAC;IAEhCN,KAAK,CAAC,CAAC,CAAC,CACHc,KAAK,CAACF,CAAC,CAACG,UAAU,CAAC,CACnBD,KAAK,CAAC,UAASJ,QAAQ,EAAE;MACxB,IAAIM,OAAO,GAAG,EAAE;MAChB,CAAC,SAASC,cAAcA,CAAA,EAAG;QACzBL,CAAC,CAACM,UAAU,CAAC,UAASC,KAAK,EAAEC,MAAM,EAAE;UACnC,IAAID,KAAK,EAAE,OAAOT,QAAQ,CAACS,KAAK,CAAC;UACjC,IAAIC,MAAM,KAAKlB,IAAI,CAACmB,GAAG,EAAE,OAAOX,QAAQ,CAAC,IAAI,EAAEM,OAAO,CAAC;UACvDA,OAAO,CAACM,IAAI,CAACF,MAAM,CAAC;UACpBG,OAAO,CAACC,QAAQ,CAACP,cAAc,CAAC;QAClC,CAAC,CAAC;MACJ,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CACDH,KAAK,CAACF,CAAC,CAACa,KAAK,CAAC,CACdC,KAAK,CAAC,UAASP,KAAK,EAAEQ,MAAM,EAAEX,OAAO,EAAE;MACtC,IAAIG,KAAK,EAAE,OAAOT,QAAQ,CAACS,KAAK,CAAC;MACjCT,QAAQ,CAAC,IAAI,EAAEiB,MAAM,EAAEX,OAAO,CAAC;IACjC,CAAC,CAAC;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}