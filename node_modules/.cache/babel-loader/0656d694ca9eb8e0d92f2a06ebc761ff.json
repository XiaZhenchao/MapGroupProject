{"ast":null,"code":"var _jsxFileName = \"/Users/wenjunfan/MapGroupProject/src/App.js\";\nimport 'leaflet/dist/leaflet.css'; // Import Leaflet CSS\nimport 'leaflet-omnivore'; // Import Leaflet Omnivore\nimport L from 'leaflet'; // Import Leaflet\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectFileButton = () => {\n      const fileInput = document.getElementById('fileInput');\n      fileInput.click();\n    };\n    this.handleFileInputChange = () => {\n      const fileInput = document.getElementById('fileInput');\n      const selectedFile = fileInput.files[0];\n\n      // if (selectedFile) {\n      //     const fileName = selectedFile.name;\n      //     const fileExtension = fileName.split('.').pop().toLowerCase();\n\n      //     if (fileExtension === 'shp' || fileExtension === 'json' || fileExtension === 'kml') {\n      //         this.setState({ selectedFile });\n      //         const uploadButton = document.getElementById('Select-File-Button');\n      //         uploadButton.disabled = true;\n      //     } else {\n      //         alert('Please select a valid SHP, GeoJSON, or KML file.');\n      //     }\n      // }\n      if (selectedFile) {\n        const fileName = selectedFile.name;\n        const fileExtension = fileName.split('.').pop().toLowerCase();\n        if (fileExtension === 'shp') {\n          this.setState({\n            selectedFile\n          });\n          const uploadButton = document.getElementById('Select-File-Button');\n          uploadButton.disabled = true;\n\n          // Load and display the map when the file extension is \"shp\"\n          this.loadShpMap(selectedFile);\n        } else if (fileExtension === 'json') {\n          // Handle GeoJSON case\n        } else if (fileExtension === 'kml') {\n          // Handle KML case\n        } else {\n          alert('Please select a valid SHP, GeoJSON, or KML file.');\n        }\n      } else {\n        this.setState({\n          selectedFile: null\n        });\n        const uploadButton = document.getElementById('Select-File-Button');\n        uploadButton.disabled = false;\n      }\n    };\n    this.handleCancelClick = () => {\n      const fileInput = document.getElementById('fileInput');\n      fileInput.value = '';\n      this.handleFileInputChange();\n    };\n    this.loadShpMap = shpFile => {\n      // Create a Leaflet map\n      const map = L.map('Container').setView([0, 0], 10); // Set initial view\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // You can use libraries like leaflet-omnivore to load Shapefiles\n      // For example, you can use omnivore to load a Shapefile\n      L.leafletOmnivore.shp(shpFile).addTo(map);\n    };\n    this.state = {\n      selectedFile: null\n    };\n  }\n  render() {\n    // let Map;\n    // if (this.state.selectedFile) {\n    //     const fileName = selectedFile.name;\n    //     const fileExtension = fileName.split('.').pop().toLowerCase();\n    //     if (fileExtension === 'shp') {\n    //         Map = (\n    //             <div>\n    //                 {/* You can customize the map container, map settings, and styles here */}\n    //                 <div id=\"shpMap\" style={{ width: '100%', height: '400px' }}></div>\n    //             </div>\n    //         );\n    //     } else if(fileExtension === 'json'){\n    //         Map = \n    //     }\n    //     else if(fileExtension === 'kml'){\n    //         Map = \n    //     }\n    //     else{\n    //         Map = \"\"\n    //     }\n    // }\n    // else{\n    //     Map = \"\"\n    // }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"TitleBox\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        style: {\n          display: 'none'\n        },\n        accept: \".shp, .json, .kml\",\n        onChange: this.handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Select-File-Button\",\n        onClick: this.handleSelectFileButton,\n        disabled: !!this.state.selectedFile,\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), this.state.selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected File: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Container\",\n        style: {\n          width: '100%',\n          height: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["L","React","jsxDEV","_jsxDEV","App","Component","constructor","props","handleSelectFileButton","fileInput","document","getElementById","click","handleFileInputChange","selectedFile","files","fileName","name","fileExtension","split","pop","toLowerCase","setState","uploadButton","disabled","loadShpMap","alert","handleCancelClick","value","shpFile","map","setView","tileLayer","attribution","addTo","leafletOmnivore","shp","state","render","id","children","_jsxFileName","lineNumber","columnNumber","type","style","display","accept","onChange","onClick","width","height"],"sources":["/Users/wenjunfan/MapGroupProject/src/App.js"],"sourcesContent":["import 'leaflet/dist/leaflet.css'; // Import Leaflet CSS\nimport 'leaflet-omnivore'; // Import Leaflet Omnivore\nimport L from 'leaflet'; // Import Leaflet\nimport React from 'react';\nimport './App.css';\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: null,\n        };\n    }\n\n    handleSelectFileButton = () => {\n        const fileInput = document.getElementById('fileInput');\n        fileInput.click();\n    };\n\n    handleFileInputChange = () => {\n        const fileInput = document.getElementById('fileInput');\n        const selectedFile = fileInput.files[0];\n\n        // if (selectedFile) {\n        //     const fileName = selectedFile.name;\n        //     const fileExtension = fileName.split('.').pop().toLowerCase();\n\n        //     if (fileExtension === 'shp' || fileExtension === 'json' || fileExtension === 'kml') {\n        //         this.setState({ selectedFile });\n        //         const uploadButton = document.getElementById('Select-File-Button');\n        //         uploadButton.disabled = true;\n        //     } else {\n        //         alert('Please select a valid SHP, GeoJSON, or KML file.');\n        //     }\n        // }\n        if (selectedFile) {\n            const fileName = selectedFile.name;\n            const fileExtension = fileName.split('.').pop().toLowerCase();\n\n            if (fileExtension === 'shp') {\n                this.setState({ selectedFile });\n                const uploadButton = document.getElementById('Select-File-Button');\n                uploadButton.disabled = true;\n                \n                // Load and display the map when the file extension is \"shp\"\n                this.loadShpMap(selectedFile);\n            } else if (fileExtension === 'json') {\n                // Handle GeoJSON case\n            } else if (fileExtension === 'kml') {\n                // Handle KML case\n            } else {\n                alert('Please select a valid SHP, GeoJSON, or KML file.');\n            }\n        } else {\n            this.setState({ selectedFile: null });\n            const uploadButton = document.getElementById('Select-File-Button');\n            uploadButton.disabled = false;\n        }\n    };\n\n    handleCancelClick = () => {\n        const fileInput = document.getElementById('fileInput');\n        fileInput.value = '';\n        this.handleFileInputChange();\n    };\n\n    loadShpMap = (shpFile) => {\n        // Create a Leaflet map\n        const map = L.map('Container').setView([0, 0], 10); // Set initial view\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }).addTo(map);\n\n        // You can use libraries like leaflet-omnivore to load Shapefiles\n        // For example, you can use omnivore to load a Shapefile\n        L.leafletOmnivore.shp(shpFile).addTo(map);\n    };\n\n    render() {\n        // let Map;\n        // if (this.state.selectedFile) {\n        //     const fileName = selectedFile.name;\n        //     const fileExtension = fileName.split('.').pop().toLowerCase();\n        //     if (fileExtension === 'shp') {\n        //         Map = (\n        //             <div>\n        //                 {/* You can customize the map container, map settings, and styles here */}\n        //                 <div id=\"shpMap\" style={{ width: '100%', height: '400px' }}></div>\n        //             </div>\n        //         );\n        //     } else if(fileExtension === 'json'){\n        //         Map = \n        //     }\n        //     else if(fileExtension === 'kml'){\n        //         Map = \n        //     }\n        //     else{\n        //         Map = \"\"\n        //     }\n        // }\n        // else{\n        //     Map = \"\"\n        // }\n        return (\n            <div id=\"root\">\n                <div id=\"TitleBox\">\n                    <h1>Map</h1>\n                </div>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    style={{ display: 'none' }}\n                    accept=\".shp, .json, .kml\"\n                    onChange={this.handleFileInputChange}\n                />\n                <button\n                    id=\"Select-File-Button\"\n                    onClick={this.handleSelectFileButton}\n                    disabled={!!this.state.selectedFile}\n                >\n                    Select File\n                </button>\n                {this.state.selectedFile && (\n                    <div>\n                        <p>Selected File: {this.state.selectedFile.name}</p>\n                        <button onClick={this.handleCancelClick}>Cancel</button>\n                    </div>\n                )}\n                <div id=\"Container\" style={{ width: '100%', height: '400px' }}></div>\n            </div>\n        );\n    }\n    \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}