{"ast":null,"code":"var types = require('./types'),\n  dbf = require('dbf'),\n  prj = require('./prj'),\n  ext = require('./extent'),\n  getFields = require('./fields'),\n  assert = require('assert'),\n  pointWriter = require('./points'),\n  polyWriter = require('./poly');\nvar writers = {\n  1: pointWriter,\n  5: polyWriter,\n  3: polyWriter\n};\nvar recordHeaderLength = 8;\nmodule.exports = write;\n\n// Low-level writing interface\nfunction write(rows, geometry_type, geometries, callback) {\n  var TYPE = types.geometries[geometry_type],\n    writer = writers[TYPE],\n    parts = writer.parts(geometries, TYPE),\n    shpLength = 100 + (parts - geometries.length) * 4 + writer.shpLength(geometries),\n    shxLength = 100 + writer.shxLength(geometries),\n    shpBuffer = new ArrayBuffer(shpLength),\n    shpView = new DataView(shpBuffer),\n    shxBuffer = new ArrayBuffer(shxLength),\n    shxView = new DataView(shxBuffer),\n    extent = writer.extent(geometries);\n  writeHeader(shpView, TYPE);\n  writeHeader(shxView, TYPE);\n  writeExtent(extent, shpView);\n  writeExtent(extent, shxView);\n  writer.write(geometries, extent, new DataView(shpBuffer, 100), new DataView(shxBuffer, 100), TYPE);\n  shpView.setInt32(24, shpLength / 2);\n  shxView.setInt32(24, 50 + geometries.length * 4);\n  var dbfBuf = dbf.structure(rows);\n  callback(null, {\n    shp: shpView,\n    shx: shxView,\n    dbf: dbfBuf,\n    prj: prj\n  });\n}\nfunction writeHeader(view, TYPE) {\n  view.setInt32(0, 9994);\n  view.setInt32(28, 1000, true);\n  view.setInt32(32, TYPE, true);\n}\nfunction writeExtent(extent, view) {\n  view.setFloat64(36, extent.xmin, true);\n  view.setFloat64(44, extent.ymin, true);\n  view.setFloat64(52, extent.xmax, true);\n  view.setFloat64(60, extent.ymax, true);\n}","map":{"version":3,"names":["types","require","dbf","prj","ext","getFields","assert","pointWriter","polyWriter","writers","recordHeaderLength","module","exports","write","rows","geometry_type","geometries","callback","TYPE","writer","parts","shpLength","length","shxLength","shpBuffer","ArrayBuffer","shpView","DataView","shxBuffer","shxView","extent","writeHeader","writeExtent","setInt32","dbfBuf","structure","shp","shx","view","setFloat64","xmin","ymin","xmax","ymax"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shp-write/src/write.js"],"sourcesContent":["var types = require('./types'),\n    dbf = require('dbf'),\n    prj = require('./prj'),\n    ext = require('./extent'),\n    getFields = require('./fields'),\n    assert = require('assert'),\n    pointWriter = require('./points'),\n    polyWriter = require('./poly');\n\nvar writers = {\n    1: pointWriter,\n    5: polyWriter,\n    3: polyWriter\n};\n\nvar recordHeaderLength = 8;\n\nmodule.exports = write;\n\n// Low-level writing interface\nfunction write(rows, geometry_type, geometries, callback) {\n\n    var TYPE = types.geometries[geometry_type],\n        writer = writers[TYPE],\n        parts = writer.parts(geometries, TYPE),\n        shpLength = 100 + (parts - geometries.length) * 4 + writer.shpLength(geometries),\n        shxLength = 100 + writer.shxLength(geometries),\n        shpBuffer = new ArrayBuffer(shpLength),\n        shpView = new DataView(shpBuffer),\n        shxBuffer = new ArrayBuffer(shxLength),\n        shxView = new DataView(shxBuffer),\n        extent = writer.extent(geometries);\n\n    writeHeader(shpView, TYPE);\n    writeHeader(shxView, TYPE);\n    writeExtent(extent, shpView);\n    writeExtent(extent, shxView);\n\n    writer.write(geometries, extent,\n        new DataView(shpBuffer, 100),\n        new DataView(shxBuffer, 100),\n        TYPE);\n\n    shpView.setInt32(24, shpLength / 2);\n    shxView.setInt32(24, (50 + geometries.length * 4));\n\n    var dbfBuf = dbf.structure(rows);\n\n    callback(null, {\n        shp: shpView,\n        shx: shxView,\n        dbf: dbfBuf,\n        prj: prj\n    });\n}\n\nfunction writeHeader(view, TYPE) {\n    view.setInt32(0, 9994);\n    view.setInt32(28, 1000, true);\n    view.setInt32(32, TYPE, true);\n}\n\nfunction writeExtent(extent, view) {\n    view.setFloat64(36, extent.xmin, true);\n    view.setFloat64(44, extent.ymin, true);\n    view.setFloat64(52, extent.xmax, true);\n    view.setFloat64(60, extent.ymax, true);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}