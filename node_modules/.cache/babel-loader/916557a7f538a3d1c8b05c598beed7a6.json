{"ast":null,"code":"var file = require(\"./file\");\nexports.read = require(\"./read\")(reader);\nexports.reader = reader;\nfunction reader(filename) {\n  var fileReader = file.reader(filename),\n    shapeType;\n  function readHeader(callback) {\n    fileReader.read(100, function (error, fileHeader) {\n      if (fileHeader === end) error = new Error(\"unexpected EOF\");\n      if (error) return void callback(error);\n      callback(null, {\n        fileCode: fileHeader.readInt32BE(0),\n        // TODO verify 9994\n        version: fileHeader.readInt32LE(28),\n        // TODO verify 1000\n        shapeType: shapeType = fileHeader.readInt32LE(32),\n        box: [fileHeader.readDoubleLE(36), fileHeader.readDoubleLE(44), fileHeader.readDoubleLE(52), fileHeader.readDoubleLE(60)]\n        // TODO zMin: fileHeader.readDoubleLE(68)\n        // TODO zMax: fileHeader.readDoubleLE(76)\n        // TODO mMin: fileHeader.readDoubleLE(84)\n        // TODO mMax: fileHeader.readDoubleLE(92)\n      });\n    });\n\n    return this;\n  }\n  function readRecord(callback) {\n    if (!shapeType) return callback(new Error(\"must read header before reading records\")), this;\n    if (!(shapeType in readShape)) return callback(new Error(\"unsupported shape type: \" + shapeType)), this;\n    var readShapeType = readShape[shapeType];\n    fileReader.read(8, function readRecordHeader(error, recordHeader) {\n      if (recordHeader === end) return callback(null, end);\n      if (error) return void callback(error);\n      // TODO verify var recordNumber = recordHeader.readInt32BE(0);\n      fileReader.read(recordHeader.readInt32BE(4) * 2, function readRecord(error, record) {\n        if (record === end) error = new Error(\"unexpected EOF\");\n        if (error) return void callback(error);\n        var shapeType = record.readInt32LE(0);\n        callback(null, shapeType ? readShapeType(record) : null);\n      });\n    });\n    return this;\n  }\n  function close(callback) {\n    fileReader.close(callback);\n    return this;\n  }\n  return {\n    readHeader: readHeader,\n    readRecord: readRecord,\n    close: close\n  };\n}\nvar end = exports.end = file.end;\nvar readShape = {\n  0: readNull,\n  1: readPoint,\n  3: readPoly(3),\n  // PolyLine\n  5: readPoly(5),\n  // Polygon\n  8: readMultiPoint,\n  11: readPoint,\n  // PointZ\n  13: readPoly(3),\n  // PolyLineZ\n  15: readPoly(5),\n  // PolygonZ\n  18: readMultiPoint // MultiPointZ\n  // 21: TODO readPointM\n  // 23: TODO readPolyLineM\n  // 25: TODO readPolygonM\n  // 28: TODO readMultiPointM\n  // 31: TODO readMultiPatch\n};\n\nfunction readNull() {\n  return null;\n}\nfunction readPoint(record) {\n  var x = record.readDoubleLE(4),\n    y = record.readDoubleLE(12);\n  return {\n    shapeType: 1,\n    x: x,\n    y: y\n  };\n}\nfunction readPoly(shapeType) {\n  return function (record) {\n    var box = [record.readDoubleLE(4), record.readDoubleLE(12), record.readDoubleLE(20), record.readDoubleLE(28)],\n      numParts = record.readInt32LE(36),\n      numPoints = record.readInt32LE(40),\n      parts = new Array(numParts),\n      points = new Array(numPoints),\n      i = 44,\n      j;\n    for (j = 0; j < numParts; ++j, i += 4) parts[j] = record.readInt32LE(i);\n    for (j = 0; j < numPoints; ++j, i += 16) points[j] = [record.readDoubleLE(i), record.readDoubleLE(i + 8)];\n    return {\n      shapeType: shapeType,\n      box: box,\n      parts: parts,\n      points: points\n    };\n  };\n}\nfunction readMultiPoint(record) {\n  var box = [record.readDoubleLE(4), record.readDoubleLE(12), record.readDoubleLE(20), record.readDoubleLE(28)],\n    numPoints = record.readInt32LE(36),\n    points = new Array(numPoints),\n    i = 40,\n    j;\n  for (j = 0; j < numPoints; ++j, i += 16) points[j] = [record.readDoubleLE(i), record.readDoubleLE(i + 8)];\n  return {\n    shapeType: 8,\n    box: box,\n    points: points\n  };\n}","map":{"version":3,"names":["file","require","exports","read","reader","filename","fileReader","shapeType","readHeader","callback","error","fileHeader","end","Error","fileCode","readInt32BE","version","readInt32LE","box","readDoubleLE","readRecord","readShape","readShapeType","readRecordHeader","recordHeader","record","close","readNull","readPoint","readPoly","readMultiPoint","x","y","numParts","numPoints","parts","Array","points","i","j"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shapefile/shp.js"],"sourcesContent":["var file = require(\"./file\");\n\nexports.read = require(\"./read\")(reader);\nexports.reader = reader;\n\nfunction reader(filename) {\n  var fileReader = file.reader(filename),\n      shapeType;\n\n  function readHeader(callback) {\n    fileReader.read(100, function(error, fileHeader) {\n      if (fileHeader === end) error = new Error(\"unexpected EOF\");\n      if (error) return void callback(error);\n      callback(null, {\n        fileCode: fileHeader.readInt32BE(0), // TODO verify 9994\n        version: fileHeader.readInt32LE(28), // TODO verify 1000\n        shapeType: shapeType = fileHeader.readInt32LE(32),\n        box: [fileHeader.readDoubleLE(36), fileHeader.readDoubleLE(44), fileHeader.readDoubleLE(52), fileHeader.readDoubleLE(60)]\n        // TODO zMin: fileHeader.readDoubleLE(68)\n        // TODO zMax: fileHeader.readDoubleLE(76)\n        // TODO mMin: fileHeader.readDoubleLE(84)\n        // TODO mMax: fileHeader.readDoubleLE(92)\n      });\n    });\n    return this;\n  }\n\n  function readRecord(callback) {\n    if (!shapeType) return callback(new Error(\"must read header before reading records\")), this;\n    if (!(shapeType in readShape)) return callback(new Error(\"unsupported shape type: \" + shapeType)), this;\n    var readShapeType = readShape[shapeType];\n    fileReader.read(8, function readRecordHeader(error, recordHeader) {\n      if (recordHeader === end) return callback(null, end);\n      if (error) return void callback(error);\n      // TODO verify var recordNumber = recordHeader.readInt32BE(0);\n      fileReader.read(recordHeader.readInt32BE(4) * 2, function readRecord(error, record) {\n        if (record === end) error = new Error(\"unexpected EOF\");\n        if (error) return void callback(error);\n        var shapeType = record.readInt32LE(0);\n        callback(null, shapeType ? readShapeType(record) : null);\n      });\n    });\n    return this;\n  }\n\n  function close(callback) {\n    fileReader.close(callback);\n    return this;\n  }\n\n  return {\n    readHeader: readHeader,\n    readRecord: readRecord,\n    close: close\n  };\n}\n\nvar end = exports.end = file.end;\n\nvar readShape = {\n  0: readNull,\n  1: readPoint,\n  3: readPoly(3), // PolyLine\n  5: readPoly(5), // Polygon\n  8: readMultiPoint,\n  11: readPoint, // PointZ\n  13: readPoly(3), // PolyLineZ\n  15: readPoly(5), // PolygonZ\n  18: readMultiPoint // MultiPointZ\n  // 21: TODO readPointM\n  // 23: TODO readPolyLineM\n  // 25: TODO readPolygonM\n  // 28: TODO readMultiPointM\n  // 31: TODO readMultiPatch\n};\n\nfunction readNull() {\n  return null;\n}\n\nfunction readPoint(record) {\n  var x = record.readDoubleLE(4),\n      y = record.readDoubleLE(12);\n  return {\n    shapeType: 1,\n    x: x,\n    y: y\n  };\n}\n\nfunction readPoly(shapeType) {\n  return function(record) {\n    var box = [record.readDoubleLE(4), record.readDoubleLE(12), record.readDoubleLE(20), record.readDoubleLE(28)],\n        numParts = record.readInt32LE(36),\n        numPoints = record.readInt32LE(40),\n        parts = new Array(numParts),\n        points = new Array(numPoints),\n        i = 44,\n        j;\n    for (j = 0; j < numParts; ++j, i += 4) parts[j] = record.readInt32LE(i);\n    for (j = 0; j < numPoints; ++j, i += 16) points[j] = [record.readDoubleLE(i), record.readDoubleLE(i + 8)];\n    return {\n      shapeType: shapeType,\n      box: box,\n      parts: parts,\n      points: points\n    };\n  };\n}\n\nfunction readMultiPoint(record) {\n  var box = [record.readDoubleLE(4), record.readDoubleLE(12), record.readDoubleLE(20), record.readDoubleLE(28)],\n      numPoints = record.readInt32LE(36),\n      points = new Array(numPoints),\n      i = 40,\n      j;\n  for (j = 0; j < numPoints; ++j, i += 16) points[j] = [record.readDoubleLE(i), record.readDoubleLE(i + 8)];\n  return {\n    shapeType: 8,\n    box: box,\n    points: points\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}