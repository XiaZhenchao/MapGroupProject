{"ast":null,"code":"var write = require('./write'),\n  geojson = require('./geojson'),\n  prj = require('./prj'),\n  JSZip = require('jszip');\nmodule.exports = function (gj, options) {\n  var zip = new JSZip(),\n    layers = zip.folder(options && options.folder ? options.folder : 'layers');\n  [geojson.point(gj), geojson.line(gj), geojson.polygon(gj)].forEach(function (l) {\n    if (l.geometries.length && l.geometries[0].length) {\n      write(\n      // field definitions\n      l.properties,\n      // geometry type\n      l.type,\n      // geometries\n      l.geometries, function (err, files) {\n        var fileName = options && options.types[l.type.toLowerCase()] ? options.types[l.type.toLowerCase()] : l.type;\n        layers.file(fileName + '.shp', files.shp.buffer, {\n          binary: true\n        });\n        layers.file(fileName + '.shx', files.shx.buffer, {\n          binary: true\n        });\n        layers.file(fileName + '.dbf', files.dbf.buffer, {\n          binary: true\n        });\n        layers.file(fileName + '.prj', prj);\n      });\n    }\n  });\n  var generateOptions = {\n    compression: 'STORE'\n  };\n  if (!process.browser) {\n    generateOptions.type = 'nodebuffer';\n  }\n  return zip.generate(generateOptions);\n};","map":{"version":3,"names":["write","require","geojson","prj","JSZip","module","exports","gj","options","zip","layers","folder","point","line","polygon","forEach","l","geometries","length","properties","type","err","files","fileName","types","toLowerCase","file","shp","buffer","binary","shx","dbf","generateOptions","compression","process","browser","generate"],"sources":["/Users/yongerfan/Desktop/GroupProject/MapGroupProject/node_modules/shp-write/src/zip.js"],"sourcesContent":["var write = require('./write'),\n    geojson = require('./geojson'),\n    prj = require('./prj'),\n    JSZip = require('jszip');\n\nmodule.exports = function(gj, options) {\n\n    var zip = new JSZip(),\n        layers = zip.folder(options && options.folder ? options.folder : 'layers');\n\n    [geojson.point(gj), geojson.line(gj), geojson.polygon(gj)]\n        .forEach(function(l) {\n        if (l.geometries.length && l.geometries[0].length) {\n            write(\n                // field definitions\n                l.properties,\n                // geometry type\n                l.type,\n                // geometries\n                l.geometries,\n                function(err, files) {\n                    var fileName = options && options.types[l.type.toLowerCase()] ? options.types[l.type.toLowerCase()] : l.type;\n                    layers.file(fileName + '.shp', files.shp.buffer, { binary: true });\n                    layers.file(fileName + '.shx', files.shx.buffer, { binary: true });\n                    layers.file(fileName + '.dbf', files.dbf.buffer, { binary: true });\n                    layers.file(fileName + '.prj', prj);\n                });\n        }\n    });\n\n    var generateOptions = { compression:'STORE' };\n\n    if (!process.browser) {\n      generateOptions.type = 'nodebuffer';\n    }\n\n    return zip.generate(generateOptions);\n};\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC1BC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;EAC9BE,GAAG,GAAGF,OAAO,CAAC,OAAO,CAAC;EACtBG,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC;AAE5BI,MAAM,CAACC,OAAO,GAAG,UAASC,EAAE,EAAEC,OAAO,EAAE;EAEnC,IAAIC,GAAG,GAAG,IAAIL,KAAK,CAAC,CAAC;IACjBM,MAAM,GAAGD,GAAG,CAACE,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACG,MAAM,GAAG,QAAQ,CAAC;EAE9E,CAACT,OAAO,CAACU,KAAK,CAACL,EAAE,CAAC,EAAEL,OAAO,CAACW,IAAI,CAACN,EAAE,CAAC,EAAEL,OAAO,CAACY,OAAO,CAACP,EAAE,CAAC,CAAC,CACrDQ,OAAO,CAAC,UAASC,CAAC,EAAE;IACrB,IAAIA,CAAC,CAACC,UAAU,CAACC,MAAM,IAAIF,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM,EAAE;MAC/ClB,KAAK;MACD;MACAgB,CAAC,CAACG,UAAU;MACZ;MACAH,CAAC,CAACI,IAAI;MACN;MACAJ,CAAC,CAACC,UAAU,EACZ,UAASI,GAAG,EAAEC,KAAK,EAAE;QACjB,IAAIC,QAAQ,GAAGf,OAAO,IAAIA,OAAO,CAACgB,KAAK,CAACR,CAAC,CAACI,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGjB,OAAO,CAACgB,KAAK,CAACR,CAAC,CAACI,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGT,CAAC,CAACI,IAAI;QAC5GV,MAAM,CAACgB,IAAI,CAACH,QAAQ,GAAG,MAAM,EAAED,KAAK,CAACK,GAAG,CAACC,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;QAClEnB,MAAM,CAACgB,IAAI,CAACH,QAAQ,GAAG,MAAM,EAAED,KAAK,CAACQ,GAAG,CAACF,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;QAClEnB,MAAM,CAACgB,IAAI,CAACH,QAAQ,GAAG,MAAM,EAAED,KAAK,CAACS,GAAG,CAACH,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;QAClEnB,MAAM,CAACgB,IAAI,CAACH,QAAQ,GAAG,MAAM,EAAEpB,GAAG,CAAC;MACvC,CAAC,CAAC;IACV;EACJ,CAAC,CAAC;EAEF,IAAI6B,eAAe,GAAG;IAAEC,WAAW,EAAC;EAAQ,CAAC;EAE7C,IAAI,CAACC,OAAO,CAACC,OAAO,EAAE;IACpBH,eAAe,CAACZ,IAAI,GAAG,YAAY;EACrC;EAEA,OAAOX,GAAG,CAAC2B,QAAQ,CAACJ,eAAe,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"script"}