{"ast":null,"code":"'use strict';\n\nfunction isClockWise(array) {\n  let sum = 0;\n  let i = 1;\n  const len = array.length;\n  let prev, cur;\n  while (i < len) {\n    prev = cur || array[0];\n    cur = array[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n  return sum > 0;\n}\nfunction polyReduce(a, b) {\n  if (isClockWise(b) || !a.length) {\n    a.push([b]);\n  } else {\n    a[a.length - 1].push(b);\n  }\n  return a;\n}\nParseShp.prototype.parsePoint = function (data) {\n  return {\n    type: 'Point',\n    coordinates: this.parseCoord(data, 0)\n  };\n};\nParseShp.prototype.parseZPoint = function (data) {\n  const pointXY = this.parsePoint(data);\n  pointXY.coordinates.push(data.readDoubleLE(16));\n  return pointXY;\n};\nParseShp.prototype.parsePointArray = function (data, offset, num) {\n  const out = [];\n  let done = 0;\n  while (done < num) {\n    out.push(this.parseCoord(data, offset));\n    offset += 16;\n    done++;\n  }\n  return out;\n};\nParseShp.prototype.parseZPointArray = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i].push(data.readDoubleLE(zOffset));\n    i++;\n    zOffset += 8;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseArrayGroup = function (data, offset, partOffset, num, tot) {\n  const out = [];\n  let done = 0;\n  let curNum;\n  let nextNum = 0;\n  let pointNumber;\n  while (done < num) {\n    done++;\n    partOffset += 4;\n    curNum = nextNum;\n    if (done === num) {\n      nextNum = tot;\n    } else {\n      nextNum = data.readInt32LE(partOffset);\n    }\n    pointNumber = nextNum - curNum;\n    if (!pointNumber) {\n      continue;\n    }\n    out.push(this.parsePointArray(data, offset, pointNumber));\n    offset += pointNumber << 4;\n  }\n  return out;\n};\nParseShp.prototype.parseZArrayGroup = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n    zOffset += coordinates[i].length << 3;\n    i++;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseMultiPoint = function (data) {\n  const out = {};\n  const num = data.readInt32LE(32, true);\n  if (!num) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [mins[0], mins[1], maxs[0], maxs[1]];\n  const offset = 36;\n  if (num === 1) {\n    out.type = 'Point';\n    out.coordinates = this.parseCoord(data, offset);\n  } else {\n    out.type = 'MultiPoint';\n    out.coordinates = this.parsePointArray(data, offset, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZMultiPoint = function (data) {\n  const geoJson = this.parseMultiPoint(data);\n  if (!geoJson) {\n    return null;\n  }\n  let num;\n  if (geoJson.type === 'Point') {\n    geoJson.coordinates.push(data.readDoubleLE(72));\n    return geoJson;\n  } else {\n    num = geoJson.coordinates.length;\n  }\n  const zOffset = 52 + (num << 4);\n  geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n  return geoJson;\n};\nParseShp.prototype.parsePolyline = function (data) {\n  const out = {};\n  const numParts = data.readInt32LE(32);\n  if (!numParts) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [mins[0], mins[1], maxs[0], maxs[1]];\n  const num = data.readInt32LE(36);\n  let offset, partOffset;\n  if (numParts === 1) {\n    out.type = 'LineString';\n    offset = 44;\n    out.coordinates = this.parsePointArray(data, offset, num);\n  } else {\n    out.type = 'MultiLineString';\n    offset = 40 + (numParts << 2);\n    partOffset = 40;\n    out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZPolyline = function (data) {\n  const geoJson = this.parsePolyline(data);\n  if (!geoJson) {\n    return null;\n  }\n  const num = geoJson.coordinates.length;\n  let zOffset;\n  if (geoJson.type === 'LineString') {\n    zOffset = 60 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  } else {\n    const totalPoints = geoJson.coordinates.reduce(function (a, v) {\n      return a + v.length;\n    }, 0);\n    zOffset = 56 + (totalPoints << 4) + (num << 2);\n    geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  }\n};\nParseShp.prototype.polyFuncs = function (out) {\n  if (!out) {\n    return out;\n  }\n  if (out.type === 'LineString') {\n    out.type = 'Polygon';\n    out.coordinates = [out.coordinates];\n    return out;\n  } else {\n    out.coordinates = out.coordinates.reduce(polyReduce, []);\n    if (out.coordinates.length === 1) {\n      out.type = 'Polygon';\n      out.coordinates = out.coordinates[0];\n      return out;\n    } else {\n      out.type = 'MultiPolygon';\n      return out;\n    }\n  }\n};\nParseShp.prototype.parsePolygon = function (data) {\n  return this.polyFuncs(this.parsePolyline(data));\n};\nParseShp.prototype.parseZPolygon = function (data) {\n  return this.polyFuncs(this.parseZPolyline(data));\n};\nconst shpFuncObj = {\n  1: 'parsePoint',\n  3: 'parsePolyline',\n  5: 'parsePolygon',\n  8: 'parseMultiPoint',\n  11: 'parseZPoint',\n  13: 'parseZPolyline',\n  15: 'parseZPolygon',\n  18: 'parseZMultiPoint'\n};\nfunction makeParseCoord(trans) {\n  if (trans) {\n    return function (data, offset) {\n      const args = [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n      return trans.inverse(args);\n    };\n  } else {\n    return function (data, offset) {\n      return [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n    };\n  }\n}\nfunction ParseShp(buffer, trans) {\n  if (!(this instanceof ParseShp)) {\n    return new ParseShp(buffer, trans);\n  }\n  this.buffer = buffer;\n  this.headers = this.parseHeader();\n  if (this.headers.length < this.buffer.byteLength) {\n    this.buffer = this.buffer.slice(0, this.headers.length);\n  }\n  this.shpFuncs(trans);\n  this.rows = this.getRows();\n}\nParseShp.prototype.shpFuncs = function (tran) {\n  let num = this.headers.shpCode;\n  if (num > 20) {\n    num -= 20;\n  }\n  if (!(num in shpFuncObj)) {\n    throw new Error('I don\\'t know that shp type');\n  }\n  this.parseFunc = this[shpFuncObj[num]];\n  this.parseCoord = makeParseCoord(tran);\n};\nParseShp.prototype.getShpCode = function () {\n  return this.parseHeader().shpCode;\n};\nParseShp.prototype.parseHeader = function () {\n  const view = this.buffer.slice(0, 100);\n  return {\n    length: view.readInt32BE(6 << 2) << 1,\n    version: view.readInt32LE(7 << 2),\n    shpCode: view.readInt32LE(8 << 2),\n    bbox: [view.readDoubleLE(9 << 2), view.readDoubleLE(11 << 2), view.readDoubleLE(13 << 2), view.readDoubleLE(13 << 2)]\n  };\n};\nParseShp.prototype.getRows = function () {\n  let offset = 100;\n  const len = this.buffer.byteLength;\n  const out = [];\n  let current;\n  while (offset < len) {\n    current = this.getRow(offset);\n    if (!current) {\n      break;\n    }\n    offset += 8;\n    offset += current.len;\n    if (current.type) {\n      out.push(this.parseFunc(current.data));\n    } else {\n      out.push(null);\n    }\n  }\n  return out;\n};\nParseShp.prototype.getRow = function (offset) {\n  const view = this.buffer.slice(offset, offset + 12);\n  const len = view.readInt32BE(4) << 1;\n  const id = view.readInt32BE(0);\n  if (len === 0) {\n    return {\n      id: id,\n      len: len,\n      type: 0\n    };\n  }\n  return {\n    id: id,\n    len: len,\n    data: this.buffer.slice(offset + 12, offset + len + 8),\n    type: view.readInt32LE(8)\n  };\n};\nmodule.exports = function (buffer, trans) {\n  return new ParseShp(buffer, trans).rows;\n};","map":{"version":3,"names":["isClockWise","array","sum","i","len","length","prev","cur","polyReduce","a","b","push","ParseShp","prototype","parsePoint","data","type","coordinates","parseCoord","parseZPoint","pointXY","readDoubleLE","parsePointArray","offset","num","out","done","parseZPointArray","zOffset","parseArrayGroup","partOffset","tot","curNum","nextNum","pointNumber","readInt32LE","parseZArrayGroup","parseMultiPoint","mins","maxs","bbox","parseZMultiPoint","geoJson","parsePolyline","numParts","parseZPolyline","totalPoints","reduce","v","polyFuncs","parsePolygon","parseZPolygon","shpFuncObj","makeParseCoord","trans","args","inverse","buffer","headers","parseHeader","byteLength","slice","shpFuncs","rows","getRows","tran","shpCode","Error","parseFunc","getShpCode","view","readInt32BE","version","current","getRow","id","module","exports"],"sources":["C:/Users/haosh/desktop/CSE416 projec/MapGroupProject/node_modules/shpjs/lib/parseShp.js"],"sourcesContent":["'use strict';\n\nfunction isClockWise (array) {\n  let sum = 0;\n  let i = 1;\n  const len = array.length;\n  let prev, cur;\n  while (i < len) {\n    prev = cur || array[0];\n    cur = array[i];\n    sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n    i++;\n  }\n  return sum > 0;\n}\n\nfunction polyReduce (a, b) {\n  if (isClockWise(b) || !a.length) {\n    a.push([b]);\n  } else {\n    a[a.length - 1].push(b);\n  }\n  return a;\n}\nParseShp.prototype.parsePoint = function (data) {\n  return {\n    type: 'Point',\n    coordinates: this.parseCoord(data, 0)\n  };\n};\nParseShp.prototype.parseZPoint = function (data) {\n  const pointXY = this.parsePoint(data);\n  pointXY.coordinates.push(data.readDoubleLE(16));\n  return pointXY;\n};\nParseShp.prototype.parsePointArray = function (data, offset, num) {\n  const out = [];\n  let done = 0;\n  while (done < num) {\n    out.push(this.parseCoord(data, offset));\n    offset += 16;\n    done++;\n  }\n  return out;\n};\nParseShp.prototype.parseZPointArray = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i].push(data.readDoubleLE(zOffset));\n    i++;\n    zOffset += 8;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseArrayGroup = function (data, offset, partOffset, num, tot) {\n  const out = [];\n  let done = 0;\n  let curNum; let nextNum = 0;\n  let pointNumber;\n  while (done < num) {\n    done++;\n    partOffset += 4;\n    curNum = nextNum;\n    if (done === num) {\n      nextNum = tot;\n    } else {\n      nextNum = data.readInt32LE(partOffset);\n    }\n    pointNumber = nextNum - curNum;\n    if (!pointNumber) {\n      continue;\n    }\n    out.push(this.parsePointArray(data, offset, pointNumber));\n    offset += (pointNumber << 4);\n  }\n  return out;\n};\nParseShp.prototype.parseZArrayGroup = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n    zOffset += (coordinates[i].length << 3);\n    i++;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseMultiPoint = function (data) {\n  const out = {};\n  const num = data.readInt32LE(32, true);\n  if (!num) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  const offset = 36;\n  if (num === 1) {\n    out.type = 'Point';\n    out.coordinates = this.parseCoord(data, offset);\n  } else {\n    out.type = 'MultiPoint';\n    out.coordinates = this.parsePointArray(data, offset, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZMultiPoint = function (data) {\n  const geoJson = this.parseMultiPoint(data);\n  if (!geoJson) {\n    return null;\n  }\n  let num;\n  if (geoJson.type === 'Point') {\n    geoJson.coordinates.push(data.readDoubleLE(72));\n    return geoJson;\n  } else {\n    num = geoJson.coordinates.length;\n  }\n  const zOffset = 52 + (num << 4);\n  geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n  return geoJson;\n};\nParseShp.prototype.parsePolyline = function (data) {\n  const out = {};\n  const numParts = data.readInt32LE(32);\n  if (!numParts) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  const num = data.readInt32LE(36);\n  let offset, partOffset;\n  if (numParts === 1) {\n    out.type = 'LineString';\n    offset = 44;\n    out.coordinates = this.parsePointArray(data, offset, num);\n  } else {\n    out.type = 'MultiLineString';\n    offset = 40 + (numParts << 2);\n    partOffset = 40;\n    out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZPolyline = function (data) {\n  const geoJson = this.parsePolyline(data);\n  if (!geoJson) {\n    return null;\n  }\n  const num = geoJson.coordinates.length;\n  let zOffset;\n  if (geoJson.type === 'LineString') {\n    zOffset = 60 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  } else {\n    const totalPoints = geoJson.coordinates.reduce(function (a, v) {\n      return a + v.length;\n    }, 0);\n    zOffset = 56 + (totalPoints << 4) + (num << 2);\n    geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  }\n};\nParseShp.prototype.polyFuncs = function (out) {\n  if (!out) {\n    return out;\n  }\n  if (out.type === 'LineString') {\n    out.type = 'Polygon';\n    out.coordinates = [out.coordinates];\n    return out;\n  } else {\n    out.coordinates = out.coordinates.reduce(polyReduce, []);\n    if (out.coordinates.length === 1) {\n      out.type = 'Polygon';\n      out.coordinates = out.coordinates[0];\n      return out;\n    } else {\n      out.type = 'MultiPolygon';\n      return out;\n    }\n  }\n};\nParseShp.prototype.parsePolygon = function (data) {\n  return this.polyFuncs(this.parsePolyline(data));\n};\nParseShp.prototype.parseZPolygon = function (data) {\n  return this.polyFuncs(this.parseZPolyline(data));\n};\nconst shpFuncObj = {\n  1: 'parsePoint',\n  3: 'parsePolyline',\n  5: 'parsePolygon',\n  8: 'parseMultiPoint',\n  11: 'parseZPoint',\n  13: 'parseZPolyline',\n  15: 'parseZPolygon',\n  18: 'parseZMultiPoint'\n};\n\nfunction makeParseCoord (trans) {\n  if (trans) {\n    return function (data, offset) {\n      const args = [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n      return trans.inverse(args);\n    };\n  } else {\n    return function (data, offset) {\n      return [data.readDoubleLE(offset), data.readDoubleLE(offset + 8)];\n    };\n  }\n}\n\nfunction ParseShp (buffer, trans) {\n  if (!(this instanceof ParseShp)) {\n    return new ParseShp(buffer, trans);\n  }\n  this.buffer = buffer;\n  this.headers = this.parseHeader();\n  if (this.headers.length < this.buffer.byteLength) {\n    this.buffer = this.buffer.slice(0, this.headers.length);\n  }\n  this.shpFuncs(trans);\n  this.rows = this.getRows();\n}\nParseShp.prototype.shpFuncs = function (tran) {\n  let num = this.headers.shpCode;\n  if (num > 20) {\n    num -= 20;\n  }\n  if (!(num in shpFuncObj)) {\n    throw new Error('I don\\'t know that shp type');\n  }\n  this.parseFunc = this[shpFuncObj[num]];\n  this.parseCoord = makeParseCoord(tran);\n};\nParseShp.prototype.getShpCode = function () {\n  return this.parseHeader().shpCode;\n};\nParseShp.prototype.parseHeader = function () {\n  const view = this.buffer.slice(0, 100);\n  return {\n    length: view.readInt32BE(6 << 2) << 1,\n    version: view.readInt32LE(7 << 2),\n    shpCode: view.readInt32LE(8 << 2),\n    bbox: [\n      view.readDoubleLE(9 << 2),\n      view.readDoubleLE(11 << 2),\n      view.readDoubleLE(13 << 2),\n      view.readDoubleLE(13 << 2)\n    ]\n  };\n};\nParseShp.prototype.getRows = function () {\n  let offset = 100;\n  const len = this.buffer.byteLength;\n  const out = [];\n  let current;\n  while (offset < len) {\n    current = this.getRow(offset);\n    if (!current) {\n      break;\n    }\n    offset += 8;\n    offset += current.len;\n    if (current.type) {\n      out.push(this.parseFunc(current.data));\n    } else {\n      out.push(null);\n    }\n  }\n  return out;\n};\nParseShp.prototype.getRow = function (offset) {\n  const view = this.buffer.slice(offset, offset + 12);\n  const len = view.readInt32BE(4) << 1;\n  const id = view.readInt32BE(0);\n  if (len === 0) {\n    return {\n      id: id,\n      len: len,\n      type: 0\n    };\n  }\n  return {\n    id: id,\n    len: len,\n    data: this.buffer.slice(offset + 12, offset + len + 8),\n    type: view.readInt32LE(8)\n  };\n};\nmodule.exports = function (buffer, trans) {\n  return new ParseShp(buffer, trans).rows;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}