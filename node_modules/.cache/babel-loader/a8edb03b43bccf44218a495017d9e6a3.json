{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haosh\\\\Desktop\\\\CSE416 projec\\\\MapGroupProject\\\\src\\\\App.js\";\nimport 'leaflet/dist/leaflet.css'; // Import Leaflet CSS\n// @ts-ignore\nimport 'leaflet-omnivore'; // Import Leaflet Omnivore\nimport L from 'leaflet'; // Import Leaflet\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectFileButton = () => {\n      const fileInput = document.getElementById('fileInput');\n      fileInput.click();\n    };\n    this.handleFileInputChange = () => {\n      const fileInput = document.getElementById('fileInput');\n      const selectedFile = fileInput.files[0];\n      if (selectedFile) {\n        const fileName = selectedFile.name;\n        const fileExtension = fileName.split('.').pop().toLowerCase();\n        if (fileExtension === 'shp') {\n          this.setState({\n            selectedFile\n          });\n          const uploadButton = document.getElementById('Select-File-Button');\n          uploadButton.disabled = true;\n          this.loadMap(selectedFile);\n        } else if (fileExtension === 'json') {\n          this.setState({\n            selectedFile\n          });\n          const uploadButton = document.getElementById('Select-File-Button');\n          uploadButton.disabled = true;\n          this.loadMap(selectedFile);\n        } else if (fileExtension === 'kml') {\n          this.setState({\n            selectedFile\n          });\n          const uploadButton = document.getElementById('Select-File-Button');\n          uploadButton.disabled = true;\n          this.loadMap(selectedFile);\n        } else {\n          alert('Please select a valid SHP, GeoJSON, or KML file.');\n        }\n      } else {\n        this.setState({\n          selectedFile: null\n        });\n        const uploadButton = document.getElementById('Select-File-Button');\n        uploadButton.disabled = false;\n      }\n    };\n    this.handleCancelClick = () => {\n      const fileInput = document.getElementById('fileInput');\n      fileInput.value = '';\n      const container = document.getElementById('Container');\n      map.off();\n      map.remove();\n      container.innerHTML = '';\n      this.handleFileInputChange();\n    };\n    this.loadMap = shpFile => {\n      try {\n        if (this.state.map) {\n          this.state.map.remove();\n        }\n        // Create a Leaflet map\n        const map = L.map('Container').setView([0, 0], 5); // Set initial view\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; < a href=\" \">OpenStreetMap</ a> contributors'\n        }).addTo(map);\n        L.leafletOmnivore.file(shpFile).on('ready', () => {}).addTo(map);\n        // Store the new map instance in the component state\n        this.setState({\n          map\n        });\n      } catch (error) {\n        console.error('Error handle loading SHP file:', error);\n      }\n    };\n    this.state = {\n      selectedFile: null,\n      map: null // Store the map instance\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"TitleBox\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        style: {\n          display: 'none'\n        },\n        accept: \".shp, .json, .kml\",\n        onChange: this.handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Select-File-Button\",\n        onClick: this.handleSelectFileButton,\n        disabled: !!this.state.selectedFile,\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), this.state.selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected File: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["L","React","jsxDEV","_jsxDEV","App","Component","constructor","props","handleSelectFileButton","fileInput","document","getElementById","click","handleFileInputChange","selectedFile","files","fileName","name","fileExtension","split","pop","toLowerCase","setState","uploadButton","disabled","loadMap","alert","handleCancelClick","value","container","map","off","remove","innerHTML","shpFile","state","setView","tileLayer","attribution","addTo","leafletOmnivore","file","on","error","console","render","id","children","_jsxFileName","lineNumber","columnNumber","type","style","display","accept","onChange","onClick"],"sources":["C:/Users/haosh/Desktop/CSE416 projec/MapGroupProject/src/App.js"],"sourcesContent":["import 'leaflet/dist/leaflet.css'; // Import Leaflet CSS\r\n// @ts-ignore\r\nimport 'leaflet-omnivore'; // Import Leaflet Omnivore\r\nimport L from 'leaflet'; // Import Leaflet\r\nimport React from 'react';\r\nimport './App.css';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            map: null, // Store the map instance\r\n        };\r\n    }\r\n\r\n    handleSelectFileButton = () => {\r\n        const fileInput = document.getElementById('fileInput');\r\n        fileInput.click();\r\n    };\r\n\r\n    handleFileInputChange = () => {\r\n        const fileInput = document.getElementById('fileInput');\r\n        const selectedFile = fileInput.files[0];\r\n        if (selectedFile) {\r\n            const fileName = selectedFile.name;\r\n            const fileExtension = fileName.split('.').pop().toLowerCase();\r\n\r\n            if (fileExtension === 'shp') {\r\n                this.setState({ selectedFile });\r\n                const uploadButton = document.getElementById('Select-File-Button');\r\n                uploadButton.disabled = true;\r\n                this.loadMap(selectedFile);\r\n            } else if (fileExtension === 'json') {\r\n                this.setState({ selectedFile });\r\n                const uploadButton = document.getElementById('Select-File-Button');\r\n                uploadButton.disabled = true;\r\n                this.loadMap(selectedFile);\r\n            } else if (fileExtension === 'kml') {\r\n                this.setState({ selectedFile });\r\n                const uploadButton = document.getElementById('Select-File-Button');\r\n                uploadButton.disabled = true;\r\n                this.loadMap(selectedFile);\r\n            } else {\r\n                alert('Please select a valid SHP, GeoJSON, or KML file.');\r\n            }\r\n        } else {\r\n            this.setState({ selectedFile: null });\r\n            const uploadButton = document.getElementById('Select-File-Button');\r\n            uploadButton.disabled = false;\r\n        }\r\n    };\r\n\r\n    handleCancelClick = () => {\r\n        const fileInput = document.getElementById('fileInput');\r\n        fileInput.value = '';\r\n        const container = document.getElementById('Container');\r\n        map.off();\r\n        map.remove();\r\n        container.innerHTML = '';\r\n        this.handleFileInputChange();\r\n    };\r\n\r\n    loadMap = (shpFile) => {\r\n        try {\r\n            if (this.state.map) {\r\n                this.state.map.remove();\r\n            }\r\n            // Create a Leaflet map\r\n            const map = L.map('Container').setView([0, 0], 5); // Set initial view\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                attribution: '&copy; < a href=\" \">OpenStreetMap</ a> contributors',\r\n            }).addTo(map);\r\n            L.leafletOmnivore\r\n                .file(shpFile)\r\n                .on('ready', () => {\r\n                })\r\n                .addTo(map);\r\n                // Store the new map instance in the component state\r\n            this.setState({ map });\r\n        } catch (error) {\r\n            console.error('Error handle loading SHP file:', error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"root\">\r\n                <div id=\"TitleBox\">\r\n                    <h1>Map</h1>\r\n                </div>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: 'none' }}\r\n                    accept=\".shp, .json, .kml\"\r\n                    onChange={this.handleFileInputChange}\r\n                />\r\n                <button\r\n                    id=\"Select-File-Button\"\r\n                    onClick={this.handleSelectFileButton}\r\n                    disabled={!!this.state.selectedFile}\r\n                >\r\n                    Select File\r\n                </button>\r\n                {this.state.selectedFile && (\r\n                    <div>\r\n                        <p>Selected File: {this.state.selectedFile.name}</p >\r\n                        <button onClick={this.handleCancelClick}>Cancel</button>\r\n                    </div>\r\n                )}\r\n                <div id=\"Container\" ></div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}